import{_ as n,C as s,c as o,o as d,j as a,G as i,a4 as r,a as t}from"./chunks/framework.C_GGjjHE.js";const m=JSON.parse('{"title":"三.2.IP地址","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/三/2.IP地址.md","filePath":"views/study/ne/theory/三/2.IP地址.md","lastUpdated":1753087294000}'),u={name:"views/study/ne/theory/三/2.IP地址.md"};function p(_,l,h,P,I,b){const e=s("ImageViewer");return d(),o("div",null,[l[0]||(l[0]=a("h1",{id:"三-2-ip地址",tabindex:"-1"},[t("三.2.IP地址 "),a("a",{class:"header-anchor",href:"#三-2-ip地址","aria-label":'Permalink to "三.2.IP地址"'},"​")],-1)),l[1]||(l[1]=a("h3",{id:"_1-二进制转换",tabindex:"-1"},[t("1.二进制转换 "),a("a",{class:"header-anchor",href:"#_1-二进制转换","aria-label":'Permalink to "1.二进制转换"'},"​")],-1)),l[2]||(l[2]=a("ul",null,[a("li",null,"网络中常用的地址主要有IPv4、IPv6、MAC地址等"),a("li",null,"这些地址在计算机内部都是以二进制的方式进行存储，而面向用户采用的是十进制和十六进制表示")],-1)),i(e,{src:"/blog/images/study/ne/进制表示方式.png",title:"进制表示方式"}),l[3]||(l[3]=r('<br><h3 id="_2-ip地址概述" tabindex="-1">2.IP地址概述 <a class="header-anchor" href="#_2-ip地址概述" aria-label="Permalink to &quot;2.IP地址概述&quot;">​</a></h3><ul><li><p>32位二进制，由网络位和主机位组成，采用点分十进制表示</p></li><li><p>主机位全为0代表是网络号</p></li><li><p>主机位全为1代表是广播地址</p></li><li><p>00000001 - 11111110(1-254)是可用IP</p></li></ul><h3 id="_3-ip地址分类" tabindex="-1">3.IP地址分类 <a class="header-anchor" href="#_3-ip地址分类" aria-label="Permalink to &quot;3.IP地址分类&quot;">​</a></h3>',4)),i(e,{src:"/blog/images/study/ne/IP地址分类.png",title:"IP地址分类"}),l[4]||(l[4]=r('<br><h4 id="无分类编址cidr" tabindex="-1">无分类编址CIDR <a class="header-anchor" href="#无分类编址cidr" aria-label="Permalink to &quot;无分类编址CIDR&quot;">​</a></h4><ul><li>CIDR(Classless Inter-Domain Routing)：无分类域间路由选择</li><li>消除了传统了的A类、B类和C类地址以及划分子网的概念，可以更有效地分配IPv4的地址空间</li></ul><h3 id="_4-子网划分" tabindex="-1">4.子网划分 <a class="header-anchor" href="#_4-子网划分" aria-label="Permalink to &quot;4.子网划分&quot;">​</a></h3><h4 id="_1-等长" tabindex="-1">1.等长 <a class="header-anchor" href="#_1-等长" aria-label="Permalink to &quot;1.等长&quot;">​</a></h4><ul><li>从主机位<span class="green">借位</span>作为子网号，每个子网的主机数量<span class="green">相同</span></li><li>借一位可以划分为两个子网<span class="green">0、1</span></li><li>借两位可以划分四个子网<span class="green">00、01、10、11</span></li></ul><h4 id="_2-变长" tabindex="-1">2.变长 <a class="header-anchor" href="#_2-变长" aria-label="Permalink to &quot;2.变长&quot;">​</a></h4><ul><li>使用七巧法划分</li><li>优先使用小的子网号</li></ul><h3 id="_5-路由聚合" tabindex="-1">5.路由聚合 <a class="header-anchor" href="#_5-路由聚合" aria-label="Permalink to &quot;5.路由聚合&quot;">​</a></h3><ul><li>将多个子网汇总成一个大的网络号</li><li>找出多个子网络的最长共同体，即是汇总后的网络号</li></ul><p>例如：<br></p><ul><li>172.16.0.0/24</li><li><ul><li>172.16.00000000.00000000/24</li></ul></li><li>172.16.1.0/24</li><li><ul><li>172.16.00000001.00000000/24</li></ul></li><li>172.16.2.0/24</li><li><ul><li>175.16.00000010.00000000/24</li></ul></li><li>172.16.3.0/24</li><li><ul><li>172.16.00000011.00000000/24</li></ul></li></ul><p>共同部分是172.16.000000<br> 聚合后：172.16.0.0/22<br></p><h3 id="_6-ip地址和mac地址的区别" tabindex="-1">6.IP地址和MAC地址的区别 <a class="header-anchor" href="#_6-ip地址和mac地址的区别" aria-label="Permalink to &quot;6.IP地址和MAC地址的区别&quot;">​</a></h3>',14)),i(e,{src:"/blog/images/study/ne/IP地址和MAC地址的区别.png",title:"IP地址和MAC地址的区别"}),l[5]||(l[5]=a("br",null,null,-1))])}const f=n(u,[["render",p]]);export{m as __pageData,f as default};
