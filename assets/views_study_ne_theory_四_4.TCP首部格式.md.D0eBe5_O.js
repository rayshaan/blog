import{_ as r,C as t,c as u,o,b1 as s,G as e,j as i,a as n}from"./chunks/framework.w2ptJf3g.js";const b=JSON.parse('{"title":"四.4.TCP首部格式","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/四/4.TCP首部格式.md","filePath":"views/study/ne/theory/四/4.TCP首部格式.md","lastUpdated":1752226003000}'),d={name:"views/study/ne/theory/四/4.TCP首部格式.md"};function P(T,l,p,C,S,h){const a=t("ImageViewer");return o(),u("div",null,[l[0]||(l[0]=s('<h1 id="四-4-tcp首部格式" tabindex="-1">四.4.TCP首部格式 <a class="header-anchor" href="#四-4-tcp首部格式" aria-label="Permalink to &quot;四.4.TCP首部格式&quot;">​</a></h1><h3 id="_1-tcp报文段的首部格式" tabindex="-1">1.TCP报文段的首部格式 <a class="header-anchor" href="#_1-tcp报文段的首部格式" aria-label="Permalink to &quot;1.TCP报文段的首部格式&quot;">​</a></h3><ul><li>TCP虽然是面向字节流的，但TCP传送的数据单元却是报文段</li><li>TCP报文段首部的前20个字节是固定的，后面有4n字节是根据需要而增加的选项(n是整数)，<span class="green">因此TCP首部的最小长度是20字节</span></li></ul>',3)),e(a,{src:"/blog/images/study/ne/TCP报文段的首部格式.png",title:"TCP报文段的首部格式"}),l[1]||(l[1]=i("br",null,null,-1)),l[2]||(l[2]=i("h4",{id:"_1-源端口和目的端口",tabindex:"-1"},[n("1.源端口和目的端口 "),i("a",{class:"header-anchor",href:"#_1-源端口和目的端口","aria-label":'Permalink to "1.源端口和目的端口"'},"​")],-1)),l[3]||(l[3]=i("ul",null,[i("li",null,"各占2字节。端口是运输层与应用层的服务接口。运输层的复用和分用功能通过端口实现")],-1)),e(a,{src:"/blog/images/study/ne/TCP报文段首部的源端口和目的端口.png",title:"TCP报文段首部的源端口和目的端口"}),l[4]||(l[4]=s('<br><h4 id="_2-首部长度" tabindex="-1">2.首部长度 <a class="header-anchor" href="#_2-首部长度" aria-label="Permalink to &quot;2.首部长度&quot;">​</a></h4><ul><li>数据偏移(首部长度)：占4位，指出TCP报文段的数据起始处距离TCP报文段的起始处有多远。单位是32字(以4字节为计算单位)</li></ul><h4 id="_3-标志位" tabindex="-1">3.标志位 <a class="header-anchor" href="#_3-标志位" aria-label="Permalink to &quot;3.标志位&quot;">​</a></h4><ul><li><span class="green">紧急URG</span>：当URG = 1时，表面紧急指针字段有效，告诉系统此报文段中有紧急数据，应尽快传送(相当于高优先级的数据)</li><li><span class="green">确认ACK</span>：只有当ACK = 1时，确认号字段才有效。当ACK = 0时，确认号无效</li><li><span class="green">推送PSH(PuSH)</span>：接收TCP收到PSH = 1的报文段后，就尽快(即&quot;推送&quot;向前)交付接收应用进程。而不再等到整个缓存都填满后再交付</li><li><span class="green">复位RST(ReSeT)</span>：当RST = 1时，表面TCP连接中出现严重差错(如主机崩溃或其他原因)，必须释放连接，然后再重新建立运输连接</li><li><span class="green">同步SYN(SYNchronization)</span>：同步SYN = 1表示这是一个连接请求或连接接受报文</li><li><ul><li>当SYN = 1， ACK = 0时，表明这是一个连接请求报文段</li></ul></li><li><ul><li>当SYN = 1，ACK = 1时，表明这是一个连接接受报文段</li></ul></li><li><span class="green">终止FIN(FINish)</span>：用来释放一个连接</li><li><ul><li>FIN = 1表明此报文段的发送端的数据已发送完毕，并要求释放运输连接</li></ul></li><li><span class="green">还有几个关于拥塞控制的标志位：AE、CWR、ECE</span></li></ul><h4 id="_4-窗口" tabindex="-1">4.窗口 <a class="header-anchor" href="#_4-窗口" aria-label="Permalink to &quot;4.窗口&quot;">​</a></h4><ul><li>占2字节，窗口值告诉对方：从本报文段首部中的确认号算起，接收方目的前允许对方发送的数据量(以字节为单位)</li></ul><div class="formula"> 窗口字段明确指出了现在允许对方发送的数据量。窗口值经常在<span class="key">动态变化</span>。 </div><h4 id="_5-校验和" tabindex="-1">5.校验和 <a class="header-anchor" href="#_5-校验和" aria-label="Permalink to &quot;5.校验和&quot;">​</a></h4><ul><li>占2字节，检验和字段检验的范围包括首部和数据这两部分，在计算检验和时，要在TCP报文段的前面加上12字节的伪首部</li><li>校验和字段并不能保证数据传输的可靠性</li></ul><h4 id="_6-紧急指针" tabindex="-1">6.紧急指针 <a class="header-anchor" href="#_6-紧急指针" aria-label="Permalink to &quot;6.紧急指针&quot;">​</a></h4><ul><li>占2字节。在URG = 1时，指出本报文段中的紧急数据的字节数(紧急数据结束后就是普通数据)，指出了紧急数据的末尾在报文段中的位置</li></ul><h4 id="_7-可选项和填充" tabindex="-1">7.可选项和填充 <a class="header-anchor" href="#_7-可选项和填充" aria-label="Permalink to &quot;7.可选项和填充&quot;">​</a></h4><ul><li>可选项：长度可变，最长可达40字节</li><li>填充：使整个TCP首部长度是4字节的整数倍</li><li>TCP最初只规定了一种选项，即最大报文段长度MSS。MSS告诉对方TCP：我的缓存所能接收的报文段的数据字段的最大长度是MSS个字节</li></ul><h5 id="最大报文段长度mss-可选项1-编号为2" tabindex="-1">最大报文段长度MSS：可选项1(编号为2) <a class="header-anchor" href="#最大报文段长度mss-可选项1-编号为2" aria-label="Permalink to &quot;最大报文段长度MSS：可选项1(编号为2)&quot;">​</a></h5><ul><li>最大报文段长度MSS(Maximum Segment Size)是每个TCP报文段中的数据字段的最大长度</li><li>与接收窗口值没有关系</li><li>不能太小</li><li><ul><li>太小的话网络利用率会很低</li></ul></li><li>不能太大</li><li><ul><li>开销增大</li></ul></li><li><ul><li>IP传输时要分片，终点要组装</li></ul></li><li><ul><li>分片传输出错时，要重传整个分组</li></ul></li><li>应尽可能大</li><li><ul><li>只要在IP层传输时不再分片</li></ul></li><li><ul><li>默认值 = 536字节</li></ul></li><li><ul><li>报文段长度 = 536 + 20 = 556字节</li></ul></li><li><ul><li>IP数据报长度 = 556 + 20 = 576字节</li></ul></li><li>推荐值：MSS最大不能超过1460字节(减去20字节的TCP首部和IP首部)</li></ul>',16)),e(a,{src:"/blog/images/study/ne/最大报文段长度MSS.png",title:"最大报文段长度MSS"}),l[5]||(l[5]=i("br",null,null,-1)),l[6]||(l[6]=i("h5",{id:"窗口扩大-可选项2-编号为3",tabindex:"-1"},[n("窗口扩大：可选项2(编号为3) "),i("a",{class:"header-anchor",href:"#窗口扩大-可选项2-编号为3","aria-label":'Permalink to "窗口扩大：可选项2(编号为3)"'},"​")],-1)),e(a,{src:"/blog/images/study/ne/TCP报文段可选项-窗口扩大.png",title:"TCP报文段可选项-窗口扩大"}),l[7]||(l[7]=i("br",null,null,-1)),l[8]||(l[8]=i("ul",null,[i("li",null,"TCP 窗口字段长度 = 16 位，最大窗口大小 = 64 K 字节。"),i("li",null,"对于传播时延和带宽都很大的网络，为获得高吞吐率，需要更大的窗口。"),i("li",null,"窗口扩大选项：占 3 字节，其中一个字节表示移位值 S。"),i("li",null,"新的窗口值位数从 16 增大到（16 + S），相当于把窗口值向左移动 S 位。"),i("li",null,"移位值允许使用的最大值是 14，窗口最大值增大到 2^(16 + 14) - 1 = 2^29 - 1。"),i("li",null,"窗口扩大选项可以在双方初始建立 TCP 连接时进行协商。")],-1)),l[9]||(l[9]=i("h5",{id:"选择确认sack-可选项3-编号为5",tabindex:"-1"},[n("选择确认SACK：可选项3(编号为5) "),i("a",{class:"header-anchor",href:"#选择确认sack-可选项3-编号为5","aria-label":'Permalink to "选择确认SACK：可选项3(编号为5)"'},"​")],-1)),e(a,{src:"/blog/images/study/ne/TCP报文段可选项-选择确认.png",title:"TCP报文段可选项-选择确认"}),l[10]||(l[10]=s('<br><ul><li>SACK包括了两个TCP选项</li><li><ul><li>一个选项用于标识是否支持SACK，是在TCP连接建立时发送</li></ul></li><li><ul><li>另一种选项则包含了具体的SACK信息</li></ul></li><li><ul><li>该选项参数告诉对方已经接收到并缓存的不连续的数据块，发送方可根据此信息检查究竟是哪些块丢失，从而发送相应的数据块</li></ul></li></ul><h5 id="时间戳-可选项4-编号为8" tabindex="-1">时间戳：可选项4(编号为8) <a class="header-anchor" href="#时间戳-可选项4-编号为8" aria-label="Permalink to &quot;时间戳：可选项4(编号为8)&quot;">​</a></h5><ul><li>占10字节，最主要的2个字段：</li><li><ul><li><span class="green">时间戳值字段(4字节)</span></li></ul></li><li><ul><li><span class="green">时间戳回送回答字段(4字节)</span></li></ul></li><li>2个主要功能：</li><li><span class="green">计算往返时间RTT</span></li><li><ul><li><span class="green">防止序号绕回PAWS(Protect Against Wrapped Sequence numbers)</span></li></ul></li><li><ul><li>序号重复时，为了使接收方能够把<span class="red">新报文段</span>和迟到很久的<span class="red">旧报文段</span>区分开，可以在报文段中加上时间戳</li></ul></li></ul>',4))])}const m=r(d,[["render",P]]);export{b as __pageData,m as default};
