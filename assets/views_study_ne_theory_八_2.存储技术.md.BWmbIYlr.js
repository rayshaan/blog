import{_ as n,C as s,c as e,o,a4 as i,G as a,j as d,a as r}from"./chunks/framework.C_GGjjHE.js";const _=JSON.parse('{"title":"八.2.存储技术","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/八/2.存储技术.md","filePath":"views/study/ne/theory/八/2.存储技术.md","lastUpdated":1759302708000}'),u={name:"views/study/ne/theory/八/2.存储技术.md"};function A(b,t,I,D,h,R){const l=s("ImageViewer");return o(),e("div",null,[t[0]||(t[0]=i('<h1 id="八-2-存储技术" tabindex="-1">八.2.存储技术 <a class="header-anchor" href="#八-2-存储技术" aria-label="Permalink to &quot;八.2.存储技术&quot;">​</a></h1><h3 id="_1-raid-1-0技术" tabindex="-1">1.RAID 1.0技术 <a class="header-anchor" href="#_1-raid-1-0技术" aria-label="Permalink to &quot;1.RAID 1.0技术&quot;">​</a></h3><ul><li>RAID：Redundant Array of Independent Disks，独立硬盘冗余阵列，RAID技术将多个单独的物理硬盘以不同的方式组合成一个逻辑硬盘，从而提高了硬盘的<span class="brown">读写性能</span>和<span class="brown">数据可靠性</span></li><li>实现方法：<span class="brown">硬件RAID</span>和<span class="brown">软件RAID</span></li></ul>',3)),a(l,{src:"/blog/images/study/ne/RAID技术.png"}),t[1]||(t[1]=i('<br><h4 id="_1-raid的数据组织形式" tabindex="-1">1.RAID的数据组织形式 <a class="header-anchor" href="#_1-raid的数据组织形式" aria-label="Permalink to &quot;1.RAID的数据组织形式&quot;">​</a></h4><ul><li>硬盘的条带化：将硬盘空间按照设定的大小分为多个条带，数据写入时也按照条带的大小来划分数据模块</li><li>条带(strip)：硬盘中单个或多个连续的扇区构成一个条带，是组成分条的元素</li><li>分条(stripe)：同一个硬盘阵列中的多个硬盘驱动器上相同&quot;位置&quot;(或者说是相同编号)的条带</li></ul><h4 id="_2-raid的数据保护方式" tabindex="-1">2.RAID的数据保护方式 <a class="header-anchor" href="#_2-raid的数据保护方式" aria-label="Permalink to &quot;2.RAID的数据保护方式&quot;">​</a></h4><ul><li><span class="brown">镜像(Mirroring)</span>：在另一块冗余的硬盘上保存数据的副本</li><li><span class="brown">奇偶校验算法(XOR)</span><ul><li>XOR运算广泛地使用在数据电子和计算机科学中</li><li>XOR校验的算法——<span class="green">相同为假，相异为真</span></li><li>0⊕0 = 0；0⊕1 = 1；1⊕0 = 1；1⊕1 = 0</li></ul></li></ul>',5)),a(l,{src:"/blog/images/study/ne/奇偶校验算法.png"}),t[2]||(t[2]=d("br",null,null,-1)),t[3]||(t[3]=d("h4",{id:"_3-常用raid级别与分类标准",tabindex:"-1"},[r("3.常用RAID级别与分类标准 "),d("a",{class:"header-anchor",href:"#_3-常用raid级别与分类标准","aria-label":'Permalink to "3.常用RAID级别与分类标准"'},"​")],-1)),a(l,{src:"/blog/images/study/ne/常用RAID级别与分类标准.png"}),t[4]||(t[4]=d("br",null,null,-1)),t[5]||(t[5]=d("h4",{id:"_4-raid的分类",tabindex:"-1"},[r("4.RAID的分类 "),d("a",{class:"header-anchor",href:"#_4-raid的分类","aria-label":'Permalink to "4.RAID的分类"'},"​")],-1)),t[6]||(t[6]=d("h5",{id:"_1-raid-0",tabindex:"-1"},[r("1.RAID 0 "),d("a",{class:"header-anchor",href:"#_1-raid-0","aria-label":'Permalink to "1.RAID 0"'},"​")],-1)),a(l,{src:"/blog/images/study/ne/RAID0.png"}),t[7]||(t[7]=d("br",null,null,-1)),t[8]||(t[8]=d("h5",{id:"_2-raid-1",tabindex:"-1"},[r("2.RAID 1 "),d("a",{class:"header-anchor",href:"#_2-raid-1","aria-label":'Permalink to "2.RAID 1"'},"​")],-1)),a(l,{src:"/blog/images/study/ne/RAID1.png"}),t[9]||(t[9]=d("br",null,null,-1)),t[10]||(t[10]=d("h5",{id:"_3-raid-3",tabindex:"-1"},[r("3.RAID 3 "),d("a",{class:"header-anchor",href:"#_3-raid-3","aria-label":'Permalink to "3.RAID 3"'},"​")],-1)),a(l,{src:"/blog/images/study/ne/RAID3.png"}),t[11]||(t[11]=d("br",null,null,-1)),t[12]||(t[12]=d("h5",{id:"_4-raid-5",tabindex:"-1"},[r("4.RAID 5 "),d("a",{class:"header-anchor",href:"#_4-raid-5","aria-label":'Permalink to "4.RAID 5"'},"​")],-1)),a(l,{src:"/blog/images/study/ne/RAID5.png"}),t[13]||(t[13]=i('<br><ul><li>RAID5是<span class="brown">分布式奇偶校验码</span>的独立硬盘结果。</li><li>RAID3存在一个问题就是，读写数据时数据盘与校验盘的负载严重不均，读写数据不需要读校验盘，写数据需要，而且比例为<a href="./写惩罚.html">读：写=1：4</a></li><li>RAID5正是为了解决这个问题，将校验位平均分布到各个磁盘，不单独设校验盘</li></ul><h5 id="_5-raid-6" tabindex="-1">5.RAID 6 <a class="header-anchor" href="#_5-raid-6" aria-label="Permalink to &quot;5.RAID 6&quot;">​</a></h5><ul><li>需要至少<span class="brown">N+2(N&gt;=2)</span>个硬盘来构成阵列，一般用在数据可靠性、可用性要求极高的应用场合</li><li>常用的RAID 6技术有 <ul><li><span class="green">RAID6 P+Q</span></li><li><span class="green">RAID6 DP</span></li></ul></li></ul><h6 id="raid6-p-q" tabindex="-1">RAID6 P+Q <a class="header-anchor" href="#raid6-p-q" aria-label="Permalink to &quot;RAID6 P+Q&quot;">​</a></h6><ul><li>RAID6 P+Q需要计算出两个校验数据P和Q，当有两个数据丢失时，根据P和Q恢复出丢失的数据。校验数据P和Q是由以下公式计算得来的</li><li>P = D0 ⊕ D1 ⊕ D2 ...</li><li>Q = (α * DO) ⊕ (β * D1) ⊕ (γ * D2) ...</li></ul>',6)),a(l,{src:"/blog/images/study/ne/RAID6 P+Q.png"}),t[14]||(t[14]=i('<br><h6 id="raid6-dp" tabindex="-1">RAID6 DP <a class="header-anchor" href="#raid6-dp" aria-label="Permalink to &quot;RAID6 DP&quot;">​</a></h6><ul><li>DP(Double Parity)，就是在RAID4所使用的一个<span class="brown">行XOR校验</span>硬盘的基础上又增加了一个硬盘用于存放<span class="brown">斜向的XOR校验</span>信息</li><li>横向校验盘中P0 - P3为各个数据盘中横向数据的校验信息 <ul><li>例：<span class="green">P0 = D0 XOR D1 XOR D2 XOR D3</span></li></ul></li><li>斜向校验盘中DP0 - DP3为各个数据盘及横向校验盘的斜向数据校验信息 <ul><li>例：<span class="green">DP0 = D0XOR D5XOR D10XOR D15</span></li></ul></li></ul>',3)),a(l,{src:"/blog/images/study/ne/RAID6 DP.png"}),t[15]||(t[15]=d("br",null,null,-1)),t[16]||(t[16]=d("h5",{id:"_6-raid-10",tabindex:"-1"},[r("6.RAID 10 "),d("a",{class:"header-anchor",href:"#_6-raid-10","aria-label":'Permalink to "6.RAID 10"'},"​")],-1)),t[17]||(t[17]=d("ul",null,[d("li",null,"RAID10是将镜像和条带进行组合的RAID级别，先进行RAID1镜像然后再做RAID0"),d("li",null,"RAID10也是一种应用比例比较广泛的RAID级别")],-1)),a(l,{src:"/blog/images/study/ne/RAID 10.png"}),t[18]||(t[18]=d("br",null,null,-1)),t[19]||(t[19]=d("h5",{id:"_7-raid-50",tabindex:"-1"},[r("7.RAID 50 "),d("a",{class:"header-anchor",href:"#_7-raid-50","aria-label":'Permalink to "7.RAID 50"'},"​")],-1)),t[20]||(t[20]=d("ul",null,[d("li",null,"RAID50是将RAID5和RAID10进行两级组合的RAID级别"),d("li",null,"第一级是RAID5，第二级为RAID0")],-1)),a(l,{src:"/blog/images/study/ne/RAID 50.png"}),t[21]||(t[21]=i('<br><h4 id="_5-raid技术比较" tabindex="-1">5.RAID技术比较 <a class="header-anchor" href="#_5-raid技术比较" aria-label="Permalink to &quot;5.RAID技术比较&quot;">​</a></h4><table tabindex="0"><thead><tr><th>RAID 级别</th><th>容错性</th><th>冗余类型</th><th>热备盘选项</th><th>读性能</th><th>随机写性能</th><th>连续写性能</th><th>最小硬盘数</th><th>可用容量</th></tr></thead><tbody><tr><td>RAID 0</td><td>无</td><td>无</td><td>无</td><td>高</td><td>高</td><td>高</td><td>2 块</td><td>(N *) 单块硬盘容量</td></tr><tr><td>RAID 1</td><td>有</td><td>复制</td><td>有</td><td>低</td><td>低</td><td>低</td><td>2 块</td><td>单块硬盘容量</td></tr><tr><td>RAID 3</td><td>有</td><td>奇偶校验</td><td>有</td><td>高</td><td>最低</td><td>低</td><td>3 块</td><td>((N - 1) *) 单块硬盘容量</td></tr><tr><td>RAID 5</td><td>有</td><td>奇偶校验</td><td>有</td><td>高</td><td>低</td><td>低</td><td>3 块</td><td>((N - 1) *) 单块硬盘容量</td></tr><tr><td>RAID 6</td><td>有</td><td>奇偶校验</td><td>有</td><td>高</td><td>低</td><td>低</td><td>4 块</td><td>((N - 2) *) 单块硬盘容量</td></tr><tr><td>RAID 10</td><td>有</td><td>复制</td><td>有</td><td>一般</td><td>一般</td><td>一般</td><td>4 块</td><td>((N / 2) *) 单块硬盘容量</td></tr><tr><td>RAID 50</td><td>有</td><td>奇偶校验</td><td>有</td><td>高</td><td>低</td><td>低</td><td>6 块</td><td>((N - 2) *) 单块硬盘容量</td></tr></tbody></table><h3 id="_2-raid-2-0" tabindex="-1">2.RAID 2.0+ <a class="header-anchor" href="#_2-raid-2-0" aria-label="Permalink to &quot;2.RAID 2.0+&quot;">​</a></h3>',4)),a(l,{src:"/blog/images/study/ne/RAID 2.0+.png"}),t[22]||(t[22]=i('<br><ul><li>RAID2.0是一个快虚拟化技术，将不同类型的硬盘组成存储资源池</li><li>将硬盘划分成若干个连续的固定大小的存储空间，成为储存块，即thunk，或简称<span class="brown">CK</span></li><li>Chunk按RAID策略组合成RAID组。称为存储块组，即chunk group，或简称<span class="brown">CKG</span></li><li>在CKG中划分若干小数据块，即<span class="brown">extent</span>。LUN就是由来自不同CKG的extent组成</li><li>用作热备空间的CK也是<span class="brown">分散</span>在各个盘上的</li></ul><h4 id="raid-2-0-重构原理" tabindex="-1">RAID 2.0+重构原理 <a class="header-anchor" href="#raid-2-0-重构原理" aria-label="Permalink to &quot;RAID 2.0+重构原理&quot;">​</a></h4>',3)),a(l,{src:"/blog/images/study/ne/RAID 2.0+重构原理.png"}),t[23]||(t[23]=d("br",null,null,-1)),t[24]||(t[24]=d("h4",{id:"raid-2-0与raid-1-0对比优势",tabindex:"-1"},[r("RAID 2.0与RAID 1.0对比优势 "),d("a",{class:"header-anchor",href:"#raid-2-0与raid-1-0对比优势","aria-label":'Permalink to "RAID 2.0与RAID 1.0对比优势"'},"​")],-1)),a(l,{src:"/blog/images/study/ne/RAID对比优势.png"}),t[25]||(t[25]=i('<br><h3 id="_3-常见的存储架构" tabindex="-1">3.常见的存储架构 <a class="header-anchor" href="#_3-常见的存储架构" aria-label="Permalink to &quot;3.常见的存储架构&quot;">​</a></h3><ul><li>1.DAS：直连附加存储</li><li>2.NAS：网络附加存储</li><li>3.SAN：存储区域网 <ul><li>FC-SAN：光通道存储区域网</li><li>IP-SAN：IP存储区域网</li></ul></li></ul><h4 id="_1-das" tabindex="-1">1.DAS <a class="header-anchor" href="#_1-das" aria-label="Permalink to &quot;1.DAS&quot;">​</a></h4><ul><li>DAS(Direct Attached Storage)是指将存储设备通过SCSI接口或光纤通道直接连接到一台计算机上，提供块级服务</li></ul>',5)),a(l,{src:"/blog/images/study/ne/存储架构DAS.png"}),t[26]||(t[26]=d("br",null,null,-1)),t[27]||(t[27]=d("h4",{id:"_2-nas",tabindex:"-1"},[r("2.NAS "),d("a",{class:"header-anchor",href:"#_2-nas","aria-label":'Permalink to "2.NAS"'},"​")],-1)),t[28]||(t[28]=d("ul",null,[d("li",null,"NAS(Network Attached Storage)是将存储设备连接到现在有的网络上，提供文件级别服务"),d("li",null,"NAS最常见的网络共享协议：CIFS和NFS")],-1)),a(l,{src:"/blog/images/study/ne/存储架构NAS.png"}),t[29]||(t[29]=d("br",null,null,-1)),t[30]||(t[30]=d("h4",{id:"_3-fc-san",tabindex:"-1"},[r("3.FC-SAN "),d("a",{class:"header-anchor",href:"#_3-fc-san","aria-label":'Permalink to "3.FC-SAN"'},"​")],-1)),t[31]||(t[31]=d("ul",null,[d("li",null,"SAN存储区域网络是一种通过网络方式连接存储设备和应用服务器的存储构架，这个网络专用于主机和存储设备之间的访问")],-1)),a(l,{src:"/blog/images/study/ne/存储架构FC-SAN.png"}),t[32]||(t[32]=d("br",null,null,-1)),t[33]||(t[33]=d("h4",{id:"_4-ip-san",tabindex:"-1"},[r("4.IP-SAN "),d("a",{class:"header-anchor",href:"#_4-ip-san","aria-label":'Permalink to "4.IP-SAN"'},"​")],-1)),t[34]||(t[34]=d("ul",null,[d("li",null,"IP-SAN(Internet Protocol Storage Area Network)是一种基于IP网络的存储网络解决方案，它利用TCP/IP协议在局域网(LAN)和广域网(WAN)上传输存储数据"),d("li",null,"IP-SAN通过将存储设备连接到IP网络，提供了一种灵活、可拓展且成本效益高的存储解决方案")],-1)),a(l,{src:"/blog/images/study/ne/存储架构IP-SAN.png"}),t[35]||(t[35]=i('<br><h4 id="ip-san与fc-san比较" tabindex="-1">IP-SAN与FC-SAN比较 <a class="header-anchor" href="#ip-san与fc-san比较" aria-label="Permalink to &quot;IP-SAN与FC-SAN比较&quot;">​</a></h4><table tabindex="0"><thead><tr><th>描述</th><th>IP SAN</th><th>FC SAN</th></tr></thead><tbody><tr><td>网络架构</td><td>使用现有IP网络</td><td>单独建设光纤网络和HBA卡</td></tr><tr><td>传输距离</td><td>理论上没有距离限制</td><td>受到光纤传输距离的限制</td></tr><tr><td>管理、维护</td><td>与IP设备一样操作简单</td><td>技术和管理较复杂</td></tr><tr><td>兼容性</td><td>与所有IP网络设备都兼容</td><td>兼容性差</td></tr><tr><td>成本</td><td>与FC SAN相比，购买与维护成本都较低，有更高的投资收益比例</td><td>购买（光纤交换机、HBA卡、光纤磁盘阵列等）、维护（培训人员、系统设置与监测等）成本高</td></tr><tr><td>容灾</td><td>本身可以实现本地和异地容灾，且成本低</td><td>容灾的硬件、软件成本高</td></tr><tr><td>安全性</td><td>较低</td><td>较高</td></tr></tbody></table><h4 id="das、nas、san对比" tabindex="-1">DAS、NAS、SAN对比 <a class="header-anchor" href="#das、nas、san对比" aria-label="Permalink to &quot;DAS、NAS、SAN对比&quot;">​</a></h4><table tabindex="0"><thead><tr><th></th><th>DAS</th><th>NAS</th><th>FC-SAN</th><th>IP-SAN</th></tr></thead><tbody><tr><td>成本</td><td>低</td><td>较低</td><td>高</td><td>较高</td></tr><tr><td>数据传输速度</td><td>快</td><td>慢</td><td>极快</td><td>较快</td></tr><tr><td>扩展性</td><td>无扩展性</td><td>较低</td><td>易于扩展</td><td>最易扩展</td></tr><tr><td>服务器访问存储方式</td><td>直接访问存储数据块</td><td>以文件方式访问</td><td>直接访问存储数据块</td><td>直接访问存储数据块</td></tr><tr><td>服务器系统性能开销</td><td>低</td><td>较低</td><td>低</td><td>较高</td></tr><tr><td>安全性</td><td>高</td><td>低</td><td>高</td><td>低</td></tr><tr><td>是否集中管理存储</td><td>否</td><td>是</td><td>是</td><td>是</td></tr><tr><td>备份效率</td><td>低</td><td>较低</td><td>高</td><td>较高</td></tr><tr><td>网络传输协议</td><td>无</td><td>TCP/IP</td><td>Fibre Channel</td><td>TCP/IP</td></tr><tr><td>适用环境</td><td>小型，直连服务器</td><td>CPU密集型、高并发随机小块IO</td><td>大块连续IO密集</td><td>大块连续IO密集</td></tr></tbody></table><h3 id="_4-分布式存储组网" tabindex="-1">4.分布式存储组网 <a class="header-anchor" href="#_4-分布式存储组网" aria-label="Permalink to &quot;4.分布式存储组网&quot;">​</a></h3><ul><li>通过<span class="brown">多副本</span>或<span class="brown">纠删码(EC)</span>技术实现数据冗余</li><li>分布式存储系统一般使用对象存储</li><li>常见的分布式存储实现技术，有HDFS、Cept、Swifw等</li></ul>',7)),a(l,{src:"/blog/images/study/ne/分布式存储组网.png"}),t[36]||(t[36]=i('<br><h4 id="对象存储和块存储、文件存储的区别" tabindex="-1">对象存储和块存储、文件存储的区别 <a class="header-anchor" href="#对象存储和块存储、文件存储的区别" aria-label="Permalink to &quot;对象存储和块存储、文件存储的区别&quot;">​</a></h4><ul><li><span class="green">块存储</span>：读写速度最快，但查询速度最慢，数据管理难度最高。适合大批量冷数据快速写入及管理。 <ul><li>常见于：<span class="brown">数据中心块设备集群、磁带机存储阵列、硬盘内部工作等场景。</span></li></ul></li><li><span class="green">文件存储</span>：读写速度最慢，查询速度适中，可直接使用，容易管理，安全性较差，价格便宜。呈现为常见的文件树状结构，方便用户直接访问，优点是直观，缺点是计算机查询文件效率低、安全性差，是面向用户的计算机系统里最常见的文件存储方式。 <ul><li>常见于：<span class="brown">NAS、NFS存储系统、FTP等场景。</span></li></ul></li><li><span class="green">对象存储</span>：读写速度和块存储相当，查询速度最快，扩容简单，程序容易管理，安全性较高。原理是把文件分解成一个个对象存储，存储文件会附加一段元数据，查询时通过元数据定位文件，结合了文件存储和块存储的优点，是存储的发展方向，也是面向程序和系统的最优文件存储方式。 <ul><li>常见于：<span class="brown">各大公有云存储系统及网盘，对存储量要求较高的大型存储系统，对高可用要求较高的存储系统等场景。</span></li></ul></li></ul><h3 id="_5-数据备份方式" tabindex="-1">5.数据备份方式 <a class="header-anchor" href="#_5-数据备份方式" aria-label="Permalink to &quot;5.数据备份方式&quot;">​</a></h3><ul><li>数据备份是容灾的基础，是指为了防止系统出现操作失误或系统故障导致数据丢失，而将全部或部分数据集合从应用主机的硬盘或阵列复制到其他的存储介质的过程</li><li>三种方式：完整备份、增量备份、差异备份</li></ul>',5)),a(l,{src:"/blog/images/study/ne/数据备份方式.png"}),t[37]||(t[37]=d("br",null,null,-1)),t[38]||(t[38]=d("h3",{id:"_6-数据快照",tabindex:"-1"},[r("6.数据快照 "),d("a",{class:"header-anchor",href:"#_6-数据快照","aria-label":'Permalink to "6.数据快照"'},"​")],-1)),t[39]||(t[39]=d("ul",null,[d("li",null,"数据快照指数据集合的一个完全可用拷贝，该拷贝包括相应数据在某个时间点的镜像，快照是磁盘的一个复制品")],-1)),a(l,{src:"/blog/images/study/ne/创建快照.png"}),t[40]||(t[40]=d("br",null,null,-1)),a(l,{src:"/blog/images/study/ne/恢复快照.png"}),t[41]||(t[41]=i('<br><h3 id="_7-快照和备份的区别" tabindex="-1">7.快照和备份的区别 <a class="header-anchor" href="#_7-快照和备份的区别" aria-label="Permalink to &quot;7.快照和备份的区别&quot;">​</a></h3><ul><li>1.速度 <ul><li>快照的速度很快，基本是瞬间完成</li><li>备份的速度根据需要备份的数据大小而定，数据越大，时间越长</li></ul></li><li>2.占用空间 <ul><li>快照仅需要创建一个快照，占用空间很小</li><li>备份需要将磁盘数据完整的备份一次，需要占用很大空间</li></ul></li><li>3.安全性 <ul><li>快照无法防止磁盘损坏导致数据丢失</li><li>备份可以将数据从一个磁盘备份到另一个磁盘，一旦磁盘损坏，另一个磁盘的备份数据不会受到影响</li></ul></li></ul>',3))])}const P=n(u,[["render",A]]);export{_ as __pageData,P as default};
