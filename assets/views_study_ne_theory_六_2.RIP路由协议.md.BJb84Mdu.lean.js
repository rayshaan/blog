import{_ as r,C as i,c as o,o as d,b1 as t,G as n,j as l,a as s}from"./chunks/framework.BbzeyoJx.js";const m=JSON.parse('{"title":"六.2.RIP路由协议","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/六/2.RIP路由协议.md","filePath":"views/study/ne/theory/六/2.RIP路由协议.md","lastUpdated":1755160894000}'),p={name:"views/study/ne/theory/六/2.RIP路由协议.md"};function P(b,a,I,u,g,R){const e=i("ImageViewer");return d(),o("div",null,[a[0]||(a[0]=t("",16)),n(e,{src:"/blog/images/study/ne/RIP的消息封装结构.png",title:"RIP的消息封装结构"}),a[1]||(a[1]=l("br",null,null,-1)),a[2]||(a[2]=l("h4",{id:"_5-工作过程",tabindex:"-1"},[s("5.工作过程 "),l("a",{class:"header-anchor",href:"#_5-工作过程","aria-label":'Permalink to "5.工作过程"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIP工作过程.png",title:"RIP工作过程"}),a[3]||(a[3]=l("br",null,null,-1)),a[4]||(a[4]=l("h4",{id:"_6-响应过程",tabindex:"-1"},[s("6.响应过程 "),l("a",{class:"header-anchor",href:"#_6-响应过程","aria-label":'Permalink to "6.响应过程"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIP响应过程.png",title:"RIP响应过程"}),a[5]||(a[5]=l("br",null,null,-1)),a[6]||(a[6]=l("h4",{id:"_7-响应完成",tabindex:"-1"},[s("7.响应完成 "),l("a",{class:"header-anchor",href:"#_7-响应完成","aria-label":'Permalink to "7.响应完成"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIP更新路由表.png",title:"RIP更新路由表"}),a[7]||(a[7]=l("br",null,null,-1)),a[8]||(a[8]=l("h3",{id:"_3-路由环路隐患",tabindex:"-1"},[s("3.路由环路隐患 "),l("a",{class:"header-anchor",href:"#_3-路由环路隐患","aria-label":'Permalink to "3.路由环路隐患"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIP路由环路隐患.png",title:"RIP路由环路隐患"}),a[9]||(a[9]=l("br",null,null,-1)),a[10]||(a[10]=l("h3",{id:"_4-路由环路隐患解决",tabindex:"-1"},[s("4.路由环路隐患解决 "),l("a",{class:"header-anchor",href:"#_4-路由环路隐患解决","aria-label":'Permalink to "4.路由环路隐患解决"'},"​")],-1)),a[11]||(a[11]=l("h4",{id:"_1-水平分割",tabindex:"-1"},[s("1.水平分割 "),l("a",{class:"header-anchor",href:"#_1-水平分割","aria-label":'Permalink to "1.水平分割"'},"​")],-1)),a[12]||(a[12]=l("ul",null,[l("li",null,"水平分割(Split Horizon)引入的规则是，禁止路由器将从一个接口学习到的路由，再从同一个接口通告出去")],-1)),n(e,{src:"/blog/images/study/ne/RIP路由环路水平分割.png",title:"RIP路由环路水平分割"}),a[13]||(a[13]=l("br",null,null,-1)),a[14]||(a[14]=l("h4",{id:"_2-毒性反转",tabindex:"-1"},[s("2.毒性反转 "),l("a",{class:"header-anchor",href:"#_2-毒性反转","aria-label":'Permalink to "2.毒性反转"'},"​")],-1)),a[15]||(a[15]=l("ul",null,[l("li",null,"毒性反转(Poison Reverse)引入的规则是，当路由器从一个接口学习到一条去往某个网络路由时，它就会通过这个接口通告一条该网络不可达的路由")],-1)),n(e,{src:"/blog/images/study/ne/RIP路由环路毒性反转.png",title:"RIP路由环路毒性反转"}),a[16]||(a[16]=l("br",null,null,-1)),a[17]||(a[17]=l("h4",{id:"_3-路由毒化和触发更新",tabindex:"-1"},[s("3.路由毒化和触发更新 "),l("a",{class:"header-anchor",href:"#_3-路由毒化和触发更新","aria-label":'Permalink to "3.路由毒化和触发更新"'},"​")],-1)),a[18]||(a[18]=l("ul",null,[l("li",null,"路由毒化(Route Poisoning)是指路由器会将自己路由表中已经失效的路由作为一条不可达路由主动通告出去"),l("li",null,"触发更新(Triggered Update)顾名思义，是指路由器在网络发生变化时，不等待更新计时器到时，就主动发送更新")],-1)),n(e,{src:"/blog/images/study/ne/RIP路由环路路由毒化和触发更新.png",title:"RIP路由环路路由毒化和触发更新"}),a[19]||(a[19]=l("br",null,null,-1)),a[20]||(a[20]=l("h3",{id:"_5-ripv2的基本配置",tabindex:"-1"},[s("5.RIPv2的基本配置 "),l("a",{class:"header-anchor",href:"#_5-ripv2的基本配置","aria-label":'Permalink to "5.RIPv2的基本配置"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIPv2的基本配置.png",title:"RIPv2的基本配置"}),a[21]||(a[21]=l("br",null,null,-1)),a[22]||(a[22]=l("h3",{id:"_6-ripv2路由自动汇总",tabindex:"-1"},[s("6.RIPv2路由自动汇总 "),l("a",{class:"header-anchor",href:"#_6-ripv2路由自动汇总","aria-label":'Permalink to "6.RIPv2路由自动汇总"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIPv2路由自动汇总.png",title:"RIPv2路由自动汇总"}),a[23]||(a[23]=t("",3)),n(e,{src:"/blog/images/study/ne/RIPv2路由手动汇总.png",title:"RIPv2路由手动汇总"}),a[24]||(a[24]=l("h3",{id:"_8-ripv2下发默认路由",tabindex:"-1"},[s("8.RIPv2下发默认路由 "),l("a",{class:"header-anchor",href:"#_8-ripv2下发默认路由","aria-label":'Permalink to "8.RIPv2下发默认路由"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIPv2下发默认路由.png",title:"RIPv2下发默认路由"}),a[25]||(a[25]=l("h3",{id:"_9-ripv2认证",tabindex:"-1"},[s("9.RIPv2认证 "),l("a",{class:"header-anchor",href:"#_9-ripv2认证","aria-label":'Permalink to "9.RIPv2认证"'},"​")],-1)),n(e,{src:"/blog/images/study/ne/RIPv2认证.png",title:"RIPv2认证"})])}const v=r(p,[["render",P]]);export{m as __pageData,v as default};
