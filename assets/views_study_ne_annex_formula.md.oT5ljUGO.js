import{_ as l,c as e,o as i,b1 as a}from"./chunks/framework.w2ptJf3g.js";const y=JSON.parse('{"title":"公式定理","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/annex/formula.md","filePath":"views/study/ne/annex/formula.md","lastUpdated":1752226003000}'),n={name:"views/study/ne/annex/formula.md"};function r(d,t,s,u,c,x){return i(),e("div",null,t[0]||(t[0]=[a('<h1 id="公式定理" tabindex="-1">公式定理 <a class="header-anchor" href="#公式定理" aria-label="Permalink to &quot;公式定理&quot;">​</a></h1><h3 id="十六进制数转为二进制数" tabindex="-1">十六进制数转为二进制数 <a class="header-anchor" href="#十六进制数转为二进制数" aria-label="Permalink to &quot;十六进制数转为二进制数&quot;">​</a></h3><ul><li>十六进制的每一个数字（0-9、A-F，其中 A=10，B=11…F=15），都可以对应一个固定的 4 位二进制数（不足 4 位时在前面补 0）</li><li>转换时，只需将十六进制的每一位拆解为对应的 4 位二进制，再拼接起来即可</li></ul><table tabindex="0"><thead><tr><th style="text-align:center;">十六进制</th><th style="text-align:center;">二进制(4位)</th><th style="text-align:center;">十六进制</th><th style="text-align:center;">二进制(4位)</th></tr></thead><tbody><tr><td style="text-align:center;">0</td><td style="text-align:center;">0000</td><td style="text-align:center;">A(10)</td><td style="text-align:center;">1010</td></tr><tr><td style="text-align:center;">1</td><td style="text-align:center;">0001</td><td style="text-align:center;">B(11)</td><td style="text-align:center;">1011</td></tr><tr><td style="text-align:center;">2</td><td style="text-align:center;">0010</td><td style="text-align:center;">C(12)</td><td style="text-align:center;">1100</td></tr><tr><td style="text-align:center;">3</td><td style="text-align:center;">0011</td><td style="text-align:center;">D(13)</td><td style="text-align:center;">1101</td></tr><tr><td style="text-align:center;">4</td><td style="text-align:center;">0100</td><td style="text-align:center;">E(14)</td><td style="text-align:center;">1110</td></tr><tr><td style="text-align:center;">5</td><td style="text-align:center;">0101</td><td style="text-align:center;">F(15)</td><td style="text-align:center;">1111</td></tr><tr><td style="text-align:center;">6</td><td style="text-align:center;">0110</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">7</td><td style="text-align:center;">0111</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">8</td><td style="text-align:center;">1000</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr><tr><td style="text-align:center;">9</td><td style="text-align:center;">1001</td><td style="text-align:center;"></td><td style="text-align:center;"></td></tr></tbody></table><ul><li>例1：将十六进制数3A转为二进制</li><li><ul><li>3对应0011，A对应1010，所以3A的二进制是00111010</li></ul></li><li>例2：将十六进制数F5C转为二进制</li><li><ul><li>F对应1111，5对应0101，C对应1100，所以F5C的二进制是111101011100</li></ul></li></ul><h3 id="十六进制数转为十进制数" tabindex="-1">十六进制数转为十进制数 <a class="header-anchor" href="#十六进制数转为十进制数" aria-label="Permalink to &quot;十六进制数转为十进制数&quot;">​</a></h3><ul><li><span class="red">从右往左</span>计算</li><li>第一位是16⁰，第二位是16¹，...，第n位是16ⁿ⁻¹ <br><br></li><li>例1：将十六进制数 3A 转为十进制</li><li><ul><li>A = 10 * 16⁰ = 10，3 = 3 * 16¹ = 48，所以3A的十进制是10 + 48 = 58</li></ul></li><li>例2：将十六进制数 F5C 转为十进制</li><li><ul><li>C = 12 * 16⁰ = 12，5 = 5 * 16¹ = 80，F = 15 * 16² = 3840</li></ul></li><li><ul><li>所以F5C的十进制是12 + 80 + 3840 = 3932</li></ul></li></ul><h3 id="二进制转为十进制" tabindex="-1">二进制转为十进制 <a class="header-anchor" href="#二进制转为十进制" aria-label="Permalink to &quot;二进制转为十进制&quot;">​</a></h3><ul><li><span class="red">从右往左</span>计算<span class="red">权重</span></li><li>计算权重后将每一位数字 x 对应权重后相加求和，结果即为十进制 <br><br></li><li>例1.二进制 11010 转十进制</li><li><ul><li>计算权重：1(2⁴=16)，1(2³=8)，0(2²=4)，1(2¹=2)，0(2⁰=1)</li></ul></li><li><ul><li>计算数值：1×16=16，1×8=8，0×4=0，1×2=2，0×1=0</li></ul></li><li><ul><li>数值相加：16 + 8 + 0 + 2 + 0 = 26</li></ul></li><li><ul><li>二进制 11010 对应十进制 26</li></ul></li><li>例2.二进制1101011转为十进制</li><li><ul><li>计算权重：1(2⁶=64)，1(2⁵=32)，0(2⁴=16)，1(2³=8)，0(2²=4)，1(2¹=2)，1(2⁰=1)</li></ul></li><li><ul><li>计算数值：1x64=64，1x32=32，0x16=0，1x8=8，0x4=0，1x2=2，1x1=1</li></ul></li><li><ul><li>数值相加：64 + 32 + 0 + 8 + 0 + 2 + 1 = 107</li></ul></li><li><ul><li>二进制 1101011 对应十进制 107</li></ul></li></ul><h3 id="二进制转为十六进制" tabindex="-1">二进制转为十六进制 <a class="header-anchor" href="#二进制转为十六进制" aria-label="Permalink to &quot;二进制转为十六进制&quot;">​</a></h3><ul><li><p>1 位十六进制对应 4 位二进制</p></li><li><p>将二进制数从<span class="red">右往左</span>每 4 位分组（不足 4 位左补 0） <br><br> | 十六进制 | 二进制(4位) | 十六进制 | 二进制(4位) | | :-----: | :-----: | :-----: | :-----: | | 0 | 0000 | A(10) | 1010 | | 1 | 0001 | B(11) | 1011 | | 2 | 0010 | C(12) | 1100 | | 3 | 0011 | D(13) | 1101 | | 4 | 0100 | E(14) | 1110 | | 5 | 0101 | F(15) | 1111 | | 6 | 0110 | | 7 | 0111 | | 8 | 1000 | | 9 | 1001 |</p></li><li><p>例1.二进制 1101011 转十六进制</p></li><li><ul><li>从右往左分组并补零：(0)110 1011</li></ul></li><li><ul><li>寻找对应的十六进制数：0110对应6，1011对应B</li></ul></li><li><ul><li>所以1101011的十六进制表示是6B</li></ul></li></ul><h3 id="十进制转为二进制" tabindex="-1">十进制转为二进制 <a class="header-anchor" href="#十进制转为二进制" aria-label="Permalink to &quot;十进制转为二进制&quot;">​</a></h3><ul><li><p>整数部分：除2取余数，商为 0 时停止</p></li><li><p>将余数逆向排列 <br><br></p></li><li><p>例1.十进制整数 26 转二进制</p></li><li><ul><li>计算余数：26 / 2 = 13(余0)，13 / 2 = 6(余1)，6 / 2 = 3(余0)，3 / 2 = 1(余1)，1 / 2 = 0(余1)</li></ul></li><li><ul><li>逆向排列：11010</li></ul></li><li><ul><li>所以26的二进制表示是11010</li></ul></li></ul><h3 id="十进制转为十六进制" tabindex="-1">十进制转为十六进制 <a class="header-anchor" href="#十进制转为十六进制" aria-label="Permalink to &quot;十进制转为十六进制&quot;">​</a></h3><ul><li><p>整数部分：除16取余数，商为 0 时停止</p></li><li><p>将余数逆向排列 <br><br></p></li><li><p>例1.十进制 269 转十六进制</p></li><li><ul><li>计算余数：269 / 16 = 16(余13)，16 / 16 = 1(余0)，1 / 16 = 0(余1)</li></ul></li><li><ul><li>逆向排列：1 + 0 + D(13)</li></ul></li><li><ul><li>所以269的十六进制表示是10D</li></ul></li></ul>',15)]))}const h=l(n,[["render",r]]);export{y as __pageData,h as default};
