import{_ as i,C as o,c as r,o as c,b1 as t,G as n,j as a,a as l}from"./chunks/framework.w2ptJf3g.js";const m=JSON.parse('{"title":"四.3.TCP协议概述","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/四/3.TCP协议概述.md","filePath":"views/study/ne/theory/四/3.TCP协议概述.md","lastUpdated":1752226003000}'),P={name:"views/study/ne/theory/四/3.TCP协议概述.md"};function p(d,e,T,_,u,C){const s=o("ImageViewer");return c(),r("div",null,[e[0]||(e[0]=t('<h1 id="四-3-tcp协议概述" tabindex="-1">四.3.TCP协议概述 <a class="header-anchor" href="#四-3-tcp协议概述" aria-label="Permalink to &quot;四.3.TCP协议概述&quot;">​</a></h1><h3 id="_1-tcp主要特点" tabindex="-1">1.TCP主要特点 <a class="header-anchor" href="#_1-tcp主要特点" aria-label="Permalink to &quot;1.TCP主要特点&quot;">​</a></h3><ul><li>1.TCP是<span class="green">面向连接</span>的传输层协议，在无连接的，不可靠的IP网络服务基础之上提供<span class="green">可靠交付</span>的服务</li><li>2.一条TCP连接<span class="green">只能有两个端点(endpoint)</span>，每一条TCP连接只能是<span class="green">点对点(一对一)</span>的</li><li>3.TCP提供<span class="green">全双工通信</span></li><li>4.面向<span class="green">字节流</span></li><li><ul><li>TCP中的&quot;流&quot;(stream)指的是流入或流出进程的<span class="green">字节序列</span></li></ul></li></ul><h4 id="_1-tcp面向流" tabindex="-1">1.TCP面向流 <a class="header-anchor" href="#_1-tcp面向流" aria-label="Permalink to &quot;1.TCP面向流&quot;">​</a></h4>',4)),n(s,{src:"/blog/images/study/ne/TCP面向流.png",title:"TCP面向流"}),e[1]||(e[1]=a("br",null,null,-1)),e[2]||(e[2]=a("ul",null,[a("li",null,"TCP不关心应用进程一次把多长的报文发送到TCP缓存"),a("li",null,[l("TCP根据对方给出的"),a("span",{class:"green"},"窗口值"),l("和当前"),a("span",{class:"green"},"网络拥塞程度"),l("来决定一个报文段应包含多少个字节，形成TCP报文段")])],-1)),e[3]||(e[3]=a("h4",{id:"_2-tcp的连接",tabindex:"-1"},[l("2.TCP的连接 "),a("a",{class:"header-anchor",href:"#_2-tcp的连接","aria-label":'Permalink to "2.TCP的连接"'},"​")],-1)),n(s,{src:"/blog/images/study/ne/TCP的连接.png",title:"TCP的连接"}),e[4]||(e[4]=t('<br><ul><li>TCP连接的端点是抽象的套接字，即(IP地址：端口号)</li><li>同一个IP地址可以有多个不听的TCP连接</li><li>同一个端口号也可以出现在多个不同的TCP连接中</li></ul><h4 id="_3-套接字-socket" tabindex="-1">3.套接字(socket) <a class="header-anchor" href="#_3-套接字-socket" aria-label="Permalink to &quot;3.套接字(socket)&quot;">​</a></h4><ul><li>套接字socket = IP地址：端口号</li><li><ul><li>例如：套接字socket = 192.168.1.20：2028</li></ul></li><li>每一条TCP连接<span class="green">唯一</span>地被通信两端的两个端点(即<span class="green">两个套接字</span>)所确定</li><li><ul><li>TCP连接:: = {<code>socket1</code>, <code>socket2</code>} = {(<code>IP1:port1</code>), (<code>IP2:port2</code>)}</li></ul></li></ul>',4))])}const g=i(P,[["render",p]]);export{m as __pageData,g as default};
