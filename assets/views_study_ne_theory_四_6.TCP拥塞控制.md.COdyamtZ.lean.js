import{_ as t,C as r,c as d,o,b1 as l,G as e,j as n,a as i}from"./chunks/framework.w2ptJf3g.js";const b=JSON.parse('{"title":"四.6.TCP拥塞控制","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/四/6.TCP拥塞控制.md","filePath":"views/study/ne/theory/四/6.TCP拥塞控制.md","lastUpdated":1753693244000}'),c={name:"views/study/ne/theory/四/6.TCP拥塞控制.md"};function p(h,a,_,u,T,g){const s=r("ImageViewer");return o(),d("div",null,[a[0]||(a[0]=l("",6)),e(s,{src:"/blog/images/study/ne/拥塞控制的作用.png",title:"拥塞控制的作用"}),a[1]||(a[1]=l("",10)),e(s,{src:"/blog/images/study/ne/拥塞控制慢开始.png",title:"拥塞控制慢开始"}),a[2]||(a[2]=l("",5)),e(s,{src:"/blog/images/study/ne/拥塞控制拥塞避免算法.png",title:"拥塞控制拥塞避免算法"}),a[3]||(a[3]=l("",5)),e(s,{src:"/blog/images/study/ne/拥塞控制快重传.png",title:"拥塞控制快重传"}),a[4]||(a[4]=l("",4)),e(s,{src:"/blog/images/study/ne/TCP拥塞控制算法举例.png",title:"TCP拥塞控制算法举例"}),a[5]||(a[5]=l("",3)),e(s,{src:"/blog/images/study/ne/TCP拥塞控制流程图.png",title:"TCP拥塞控制流程图"}),a[6]||(a[6]=n("br",null,null,-1)),a[7]||(a[7]=n("ul",null,[n("li",null,[i("当rwnd < cwnd时，是"),n("span",{class:"brown"},"接收方的接收能力"),i("限制发送窗口的最大值")]),n("li",null,[i("当rwnd > cwnd时，是"),n("span",{class:"brown"},"网络拥塞限制"),i("发送窗口的最大值")])],-1))])}const m=t(c,[["render",p]]);export{b as __pageData,m as default};
