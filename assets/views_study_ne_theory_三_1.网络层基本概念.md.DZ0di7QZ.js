import{_ as n,C as r,c as o,o as s,b1 as u,G as i,j as l,a}from"./chunks/framework.w2ptJf3g.js";const h=JSON.parse('{"title":"三.1.网络层基本概念","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/三/1.网络层基本概念.md","filePath":"views/study/ne/theory/三/1.网络层基本概念.md","lastUpdated":1752226003000}'),d={name:"views/study/ne/theory/三/1.网络层基本概念.md"};function _(f,e,m,p,b,w){const t=r("ImageViewer");return s(),o("div",null,[e[0]||(e[0]=u('<h1 id="三-1-网络层基本概念" tabindex="-1">三.1.网络层基本概念 <a class="header-anchor" href="#三-1-网络层基本概念" aria-label="Permalink to &quot;三.1.网络层基本概念&quot;">​</a></h1><h3 id="_1-网络层的两种工作模式" tabindex="-1">1.网络层的两种工作模式 <a class="header-anchor" href="#_1-网络层的两种工作模式" aria-label="Permalink to &quot;1.网络层的两种工作模式&quot;">​</a></h3><ul><li>虚电路服务(可靠传输)</li><li><ul><li>通信之前先建立虚电路VC(逻辑上的连接)，以保证双方通信所需的一切网络资源，分组都沿着这条逻辑连接按照存储转发方式传送</li></ul></li><li>数据报服务(尽力传输)</li><li><ul><li>网络在发送分组时不需要先建立连接</li></ul></li><li><ul><li>每一个分组(即IP数据报)独立发生，与其前后的分组无关(不进行编号)</li></ul></li><li><ul><li>网络层不提供服务质量的承诺</li></ul></li></ul>',3)),i(t,{src:"/blog/images/study/ne/虚电路与数据报服务的对比.png",title:"虚电路与数据报服务的对比"}),e[1]||(e[1]=l("br",null,null,-1)),e[2]||(e[2]=l("h3",{id:"_2-网络层的两个工作平面",tabindex:"-1"},[a("2.网络层的两个工作平面 "),l("a",{class:"header-anchor",href:"#_2-网络层的两个工作平面","aria-label":'Permalink to "2.网络层的两个工作平面"'},"​")],-1)),e[3]||(e[3]=l("ul",null,[l("li",null,"不同网络中的两个主机之间的通信，要经过若干个路由器转发分组来完成"),l("li",null,"在路由器之间传送的信息由以下2大类"),l("li",null,[l("ul",null,[l("li",null,"1.数据")])]),l("li",null,[l("ul",null,[l("li",null,"2.路由信息")])])],-1)),i(t,{src:"/blog/images/study/ne/数据层面和控制层面.png",title:"数据层面和控制层面"}),e[4]||(e[4]=l("br",null,null,-1)),e[5]||(e[5]=l("h3",{id:"_3-软件定义网络sdn-software-defined-network",tabindex:"-1"},[a("3.软件定义网络SDN(Software Defined Network) "),l("a",{class:"header-anchor",href:"#_3-软件定义网络sdn-software-defined-network","aria-label":'Permalink to "3.软件定义网络SDN(Software Defined Network)"'},"​")],-1)),i(t,{src:"/blog/images/study/ne/软件定义网络.png",title:"软件定义网络SDN"}),e[6]||(e[6]=l("br",null,null,-1))])}const N=n(d,[["render",_]]);export{h as __pageData,N as default};
