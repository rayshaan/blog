import{_ as n,C as p,c as r,o as h,b1 as e,G as l,j as a,a as t}from"./chunks/framework.w2ptJf3g.js";const b=JSON.parse('{"title":"七.3.路由策略","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/七/3.路由策略.md","filePath":"views/study/ne/theory/七/3.路由策略.md","lastUpdated":1758878470000}'),d={name:"views/study/ne/theory/七/3.路由策略.md"};function k(o,s,c,g,u,y){const i=p("ImageViewer");return h(),r("div",null,[s[0]||(s[0]=e('<h1 id="七-3-路由策略" tabindex="-1">七.3.路由策略 <a class="header-anchor" href="#七-3-路由策略" aria-label="Permalink to &quot;七.3.路由策略&quot;">​</a></h1><h3 id="_1-简介" tabindex="-1">1.简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1.简介&quot;">​</a></h3><p>路由策略(Route-Policy)</p><ul><li>控制路由的<span class="brown">发布</span>：通过路由策略对发布的路由进行过滤，只发布满足条件的路由</li><li>控制路由的<span class="brown">接收</span>：通过路由策略对接收的路由进行过滤，只接收满足条件的路由</li><li>控制路由的<span class="brown">引入</span>：通过路由策略控制从其他路由协议引入的路由条目，只有满足条件的路由才会被引入</li></ul><h4 id="匹配路由特征" tabindex="-1">匹配路由特征 <a class="header-anchor" href="#匹配路由特征" aria-label="Permalink to &quot;匹配路由特征&quot;">​</a></h4><ul><li>匹配出要实施路由策略的路由，即定义一组匹配规则进行匹配：可以根据路由信息中的不同属性进行匹配，如网络地址、开销、下一跳、AS号、团体属性、Tag值等</li><li>应用：路由发布、路由接收、路由引入</li><li><span class="green">路由条目匹配成功后，可以直接应用，也可以修改属性后再应用</span></li></ul><h3 id="_2-匹配工具" tabindex="-1">2.匹配工具 <a class="header-anchor" href="#_2-匹配工具" aria-label="Permalink to &quot;2.匹配工具&quot;">​</a></h3><h4 id="_1-访问控制列表acl" tabindex="-1">1.访问控制列表ACL <a class="header-anchor" href="#_1-访问控制列表acl" aria-label="Permalink to &quot;1.访问控制列表ACL&quot;">​</a></h4><ul><li>访问控制列表ACL是一个匹配工具，能够对报文及路由进行匹配和区分。ACL由若干条permit或deny语句组成。每条语句就是该ACL的一条规则，每条语句中的permit或deny就是与这条规则相对应的处理动作。</li><li><span class="green">只能使用基本ACL</span></li></ul>',9)),l(i,{src:"/blog/images/study/ne/路由策略ACL.png"}),s[1]||(s[1]=a("br",null,null,-1)),s[2]||(s[2]=a("h5",{id:"示例",tabindex:"-1"},[t("示例 "),a("a",{class:"header-anchor",href:"#示例","aria-label":'Permalink to "示例"'},"​")],-1)),l(i,{src:"/blog/images/study/ne/路由策略ACL匹配举例.png"}),s[3]||(s[3]=e('<br><h4 id="_2-ip前缀列表" tabindex="-1">2.IP前缀列表 <a class="header-anchor" href="#_2-ip前缀列表" aria-label="Permalink to &quot;2.IP前缀列表&quot;">​</a></h4><p>IP前缀列表(IP-Prefix List)是将路由条目的<span class="green">网络地址、掩码长度</span>作为匹配条件的过滤器，可在各路由协议发布和接收路由时使用。不同于ACL，IP-Prefix List能够同时匹配IP地址前缀长度以及掩码长度，增强了匹配的精确度</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei] ip ip</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">prefix test index </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> permit </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">192.168</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.22</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> greater</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">equal </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">24</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> less</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">equal </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">26</span></span></code></pre></div><ul><li>1.<span class="brown">ip-prefix-name(test)</span>：地址前缀列表名称</li><li>2.<span class="brown">序号(index 10)</span>：本匹配项在地址前缀列表中的序号，匹配时根据序号从小到大进行顺序匹配</li><li>3.<span class="brown">动作(permit)</span>：permit/deny，地址前缀列表的匹配模式为允许/拒绝，表示匹配/不匹配</li><li>4.<span class="brown">IP网段与掩码(192.168.1.0 22)</span>：匹配路由的网络地址，以及限定网络地址的前多少位需严格匹配</li><li>5.<span class="brown">掩码范围(greater-equal 24 less-equal 26)</span>：匹配路由前缀长度，掩码长度的匹配范围 mask-length &lt;= greater-rqual-value &lt;= less-equal-value &lt;= 32</li></ul><h5 id="匹配机制" tabindex="-1">匹配机制 <a class="header-anchor" href="#匹配机制" aria-label="Permalink to &quot;匹配机制&quot;">​</a></h5>',6)),l(i,{src:"/blog/images/study/ne/IP-Prefix的匹配机制.png"}),s[4]||(s[4]=a("br",null,null,-1)),s[5]||(s[5]=a("h5",{id:"匹配示例",tabindex:"-1"},[t("匹配示例 "),a("a",{class:"header-anchor",href:"#匹配示例","aria-label":'Permalink to "匹配示例"'},"​")],-1)),l(i,{src:"/blog/images/study/ne/IP-Prefix的匹配示例.png"}),s[6]||(s[6]=e('<br><h5 id="特殊用法" tabindex="-1">特殊用法 <a class="header-anchor" href="#特殊用法" aria-label="Permalink to &quot;特殊用法&quot;">​</a></h5><table tabindex="0"><thead><tr><th>命令</th><th>含义</th></tr></thead><tbody><tr><td>ip ip-prefix c2 permit 0.0.0.0 0 le 32</td><td>匹配所有路由</td></tr><tr><td>ip ip-prefix c3 permit 0.0.0.0 0</td><td>匹配默认路由</td></tr><tr><td>ip ip-prefix c3 permit 0.0.0.0 0 gr 32</td><td>匹配所有主机路由</td></tr><tr><td>ip ip-prefix c4 permit 0.0.0.0 1 gr 8 le 8</td><td>匹配所有的主A类网络</td></tr><tr><td>ip ip-prefix c6 permit 128.0.0.0 2 gr 16 le 16</td><td>匹配所有的主B类网络</td></tr><tr><td>ip ip-prefix c7 permit 192.0.0.0 3 gr 24 le 24</td><td>匹配所有的主C类网络</td></tr></tbody></table><h3 id="_3-策略工具-route-policy" tabindex="-1">3.策略工具：Route-Policy <a class="header-anchor" href="#_3-策略工具-route-policy" aria-label="Permalink to &quot;3.策略工具：Route-Policy&quot;">​</a></h3><ul><li>Route-Policy是一个策略工具，用于<span class="green">过滤路由</span>信息，以及为过滤后的路由信息<span class="green">设置路由属性</span></li><li>一个Route-Policy由一个或多个节点(Node)构成，每个节点都可以是一系列条件语句(匹配条件)以及执行语句(执行动作)的集合，这些集合按照编号<span class="green">从小到大</span>的顺序排列</li></ul>',5)),l(i,{src:"/blog/images/study/ne/策略工具Route-Policy.png"}),s[7]||(s[7]=e('<br><ul><li>多个条件语句之间的关系为&quot;<span class="green">与</span>&quot;</li><li>一个语句多个条件的关系为&quot;<span class="green">或</span>&quot;</li><li>不写条件代表<span class="green">匹配任意</span></li><li>最后Node默认<span class="green">拒绝所有</span></li></ul><h4 id="_1-组成部分" tabindex="-1">1.组成部分 <a class="header-anchor" href="#_1-组成部分" aria-label="Permalink to &quot;1.组成部分&quot;">​</a></h4>',3)),l(i,{src:"/blog/images/study/ne/Route-Policy的组成.png"}),s[8]||(s[8]=e('<br><p>一个Route-Policy由一个或多个节点构成，每个节点包括多个<span class="brown">if-match</span>和<span class="brown">apply</span>子句</p><ul><li>permit或deny：指定Route-Policy节点的匹配模式为允许或拒绝</li><li>node：指定Route-Policy的节点号。整数形式，取值范围是0 ~ 65535</li><li>if-match子句：定义该节点的匹配条件</li><li>apply子句：定义针对被匹配路由执行的操作</li></ul><h4 id="_2-匹配顺序" tabindex="-1">2.匹配顺序 <a class="header-anchor" href="#_2-匹配顺序" aria-label="Permalink to &quot;2.匹配顺序&quot;">​</a></h4>',4)),l(i,{src:"/blog/images/study/ne/Route-Policy匹配顺序.png"}),s[9]||(s[9]=e(`<br><h4 id="_3-基础配置命令" tabindex="-1">3.基础配置命令 <a class="header-anchor" href="#_3-基础配置命令" aria-label="Permalink to &quot;3.基础配置命令&quot;">​</a></h4><p>1.创建Route-Policy</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei] route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">policy route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">policy</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name {permit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deny} node node</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 创建路由策略并进入Route-Policy视图</span></span></code></pre></div><p>2.(可选)配置if-match子句</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">policy] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">if-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">match </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">acl       匹配基本ACL  </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">cost      匹配路由信息的cost</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">interface 匹配路由信息的出接口</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">ip-prefix 匹配前缀列表</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">......</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span></code></pre></div><p>3.(可选)配置apply子句</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">route</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">policy] apply </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">?</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">/* </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">cost                        设置路由的cost值</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">cost-type {type-1 | type-2} 设置OSPF的开销类型</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">ip-address next-hop         设置IPv4路由信息的下一跳地址</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">preference                  设置路由协议的优先级</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">tag                         设置路由信息的标记域</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">......</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">*/</span></span></code></pre></div><h4 id="_4-案例" tabindex="-1">4.案例 <a class="header-anchor" href="#_4-案例" aria-label="Permalink to &quot;4.案例&quot;">​</a></h4><h5 id="_1-修改路由属性" tabindex="-1">1.修改路由属性 <a class="header-anchor" href="#_1-修改路由属性" aria-label="Permalink to &quot;1.修改路由属性&quot;">​</a></h5>`,10)),l(i,{src:"/blog/images/study/ne/Route-Policy修改路由属性.png"}),s[10]||(s[10]=a("br",null,null,-1)),s[11]||(s[11]=a("h5",{id:"_2-解决次优路径",tabindex:"-1"},[t("2.解决次优路径 "),a("a",{class:"header-anchor",href:"#_2-解决次优路径","aria-label":'Permalink to "2.解决次优路径"'},"​")],-1)),l(i,{src:"/blog/images/study/ne/Route-Policy解决次优路径.png"}),s[12]||(s[12]=a("br",null,null,-1))])}const _=n(d,[["render",k]]);export{b as __pageData,_ as default};
