import{_ as h,C as k,c as e,o as p,b1 as l,G as t,j as i,a as n}from"./chunks/framework.w2ptJf3g.js";const c=JSON.parse('{"title":"七.1.ACL访问控制列表","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/七/1.ACL访问控制列表.md","filePath":"views/study/ne/theory/七/1.ACL访问控制列表.md","lastUpdated":1752226003000}'),r={name:"views/study/ne/theory/七/1.ACL访问控制列表.md"};function d(E,s,g,y,o,A){const a=k("ImageViewer");return p(),e("div",null,[s[0]||(s[0]=l('<h1 id="七-1-acl访问控制列表" tabindex="-1">七.1.ACL访问控制列表 <a class="header-anchor" href="#七-1-acl访问控制列表" aria-label="Permalink to &quot;七.1.ACL访问控制列表&quot;">​</a></h1><h3 id="_1-简介" tabindex="-1">1.简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1.简介&quot;">​</a></h3><ul><li>访问控制列表ACL(Access Control List)是<span class="brown">一条或多条规则组成的集合</span>。所谓规则，是指描述报文匹配条件的判断语句，这些条件可以是报文的源地址、目的地址、端口号等</li><li>ACL本质是<span class="brown">一种报文过滤器</span>，规则是过滤器的滤芯。设备基于这些规则进行报文匹配，可以过滤出特点的报文，<span class="green">配置ACL后，还需将ACL在业务模块中应用，ACL才能生效</span>。</li><li>ACL应用</li><li><ul><li>在Traffic-filter中被调用</li></ul></li><li><ul><li>在NAT(Network Address Translation)中被调用</li></ul></li><li><ul><li>在路由策略中被调用</li></ul></li><li><ul><li>在防火墙策略部署中被调用</li></ul></li><li><ul><li>在QoS中被调用</li></ul></li><li><ul><li>其他...</li></ul></li></ul>',3)),t(a,{src:"/blog/images/study/ne/ACL.png",title:"ACL"}),s[1]||(s[1]=i("br",null,null,-1)),s[2]||(s[2]=i("h3",{id:"_2-acl的组成",tabindex:"-1"},[n("2.ACL的组成 "),i("a",{class:"header-anchor",href:"#_2-acl的组成","aria-label":'Permalink to "2.ACL的组成"'},"​")],-1)),s[3]||(s[3]=i("p",null,"ACL是由若干条permit(允许)或deny(拒绝)语句组成。每条语句就是该ACL的一条规则，每条语句中的permit或deny就是与这条规则相对应的处理动作",-1)),t(a,{src:"/blog/images/study/ne/ACL的组成.png",title:"ACL的组成"}),s[4]||(s[4]=l('<br><h4 id="通配符掩码-wildcard" tabindex="-1">通配符掩码(Wildcard) <a class="header-anchor" href="#通配符掩码-wildcard" aria-label="Permalink to &quot;通配符掩码(Wildcard)&quot;">​</a></h4><ul><li>通配符是一个32比特长度的数值，用于指示IP地址中，哪些比特位需要严格匹配，哪些比特位无需匹配</li><li>通配符通常采用类似网络掩码的点分十进制形式表示，但是含义却与网络掩码完全不同。通配符中的1或者0可以不连续</li><li>匹配规则：0表示严格匹配，1表示任意</li><li><ul><li>例如：192.168.1.0 0.0.0.254 表示匹配该网段的所有偶数IP</li></ul></li></ul><h3 id="_3-acl的分类与标识" tabindex="-1">3.ACL的分类与标识 <a class="header-anchor" href="#_3-acl的分类与标识" aria-label="Permalink to &quot;3.ACL的分类与标识&quot;">​</a></h3><p>基于ACL规则定义方式的分类</p><table tabindex="0"><thead><tr><th>分类</th><th>编号范围</th><th>规则定义描述</th></tr></thead><tbody><tr><td>基本ACL</td><td>2000~2999</td><td>仅使用报文的源IP地址、分片信息和生效时间段信息来定义规则。</td></tr><tr><td>高级ACL</td><td>3000~3999</td><td>可使用IPv4报文的源IP地址、目的IP地址、IP协议类型、ICMP类型、TCP源/目的端口号、UDP源/目的端口号、生效时间段等来定义规则。</td></tr><tr><td>二层ACL</td><td>4000~4999</td><td>使用报文的以太网帧头信息来定义规则，如根据源MAC地址、目的MAC地址、二层协议类型等。</td></tr><tr><td>用户自定义ACL</td><td>5000~5999</td><td>使用报文头、偏移位置、字符串掩码和用户自定义字符串来定义规则。</td></tr><tr><td>用户ACL</td><td>6000~6999</td><td>既可使用IPv4报文的源IP地址或UCL（User Control List）组，也可使用目的IP地址或目的UCL组、IP协议类型、ICMP类型、TCP源端口/目的端口、UDP源端口/目的端口号等来定义规则。</td></tr></tbody></table><p>基于ACL标识方法的分类</p><table tabindex="0"><thead><tr><th>分类</th><th>规则定义描述</th></tr></thead><tbody><tr><td>数字型ACL</td><td>传统的ACL标识方法。创建ACL时，指定一个唯一的数字标识该ACL</td></tr><tr><td>命名型ACL</td><td>通过名称代替编号来标识ACL</td></tr></tbody></table><h4 id="基本acl与高级acl" tabindex="-1">基本ACL与高级ACL <a class="header-anchor" href="#基本acl与高级acl" aria-label="Permalink to &quot;基本ACL与高级ACL&quot;">​</a></h4>',9)),t(a,{src:"/blog/images/study/ne/基本ACL与高级ACL.png",title:"基本ACL与高级ACL"}),s[5]||(s[5]=i("br",null,null,-1)),s[6]||(s[6]=i("h3",{id:"_4-acl的匹配顺序及匹配结果",tabindex:"-1"},[n("4.ACL的匹配顺序及匹配结果 "),i("a",{class:"header-anchor",href:"#_4-acl的匹配顺序及匹配结果","aria-label":'Permalink to "4.ACL的匹配顺序及匹配结果"'},"​")],-1)),s[7]||(s[7]=i("p",null,"系统按照规则编号从小到大的顺序，将规则依次与报文匹配，一旦匹配上一条规则即停止匹配",-1)),t(a,{src:"/blog/images/study/ne/ACL的匹配顺序及匹配结果.png",title:"ACL的匹配顺序及匹配结果"}),s[8]||(s[8]=l(`<br><h3 id="_5-acl基础配置命令" tabindex="-1">5.ACL基础配置命令 <a class="header-anchor" href="#_5-acl基础配置命令" aria-label="Permalink to &quot;5.ACL基础配置命令&quot;">​</a></h3><h4 id="_1-基本acl" tabindex="-1">1.基本ACL <a class="header-anchor" href="#_1-基本acl" aria-label="Permalink to &quot;1.基本ACL&quot;">​</a></h4><p>1.创建基本ACL</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei] acl [number] acl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number [match</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用编号(2000~2999)创建一个数字型的基本ACL，并进入基本ACL视图</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei] acl name acl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name {basic </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> acl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number} [match</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用名称创建一个命名型的基本ACL，并进入基本ACL视图</span></span></code></pre></div><p>2.配置基本ACL的规则</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">acl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">basic</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">] rule [rule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id] {permit </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> deny} [source {soure-address source-wildcard | any} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 在基本ACL视图下，通过此命令来配置基本ACL的规则</span></span></code></pre></div><h4 id="基本acl案例" tabindex="-1">基本ACL案例 <a class="header-anchor" href="#基本acl案例" aria-label="Permalink to &quot;基本ACL案例&quot;">​</a></h4>`,8)),t(a,{src:"/blog/images/study/ne/ACL案例.png",title:"ACL案例"}),s[9]||(s[9]=l(`<br><h4 id="_2-高级acl" tabindex="-1">2.高级ACL <a class="header-anchor" href="#_2-高级acl" aria-label="Permalink to &quot;2.高级ACL&quot;">​</a></h4><p>1.创建高级ACL</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[Huawei] acl [number] acl</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number [match</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">order config </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> auto]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 使用编号(3000~3999)创建一个数字型的高级ACL，并进入高级ACL视图</span></span></code></pre></div><p>2.配置高级ACL的规则，根据IP承载的协议类型不同，在设备上配置不同的高级ACL规则。对于不同的协议类型，有不同的参数组合</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当参数protocol为IP时，高级ACL的命令格式为</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rule [rule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id] {deny </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> permit} ip [destination {destination-address-wildcard | deny} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source {source-address-wildcard | any} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [dscp dscp </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> [tos tos </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> precedence precedence]]]</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 当参数ptotocol为TCP时，高级ACL的命令格式为</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rule [rule</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">id] {deny </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> permit} {protocol</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">number </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tcp} [destination {destination-address destination-wildcard | any} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> destination</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port {eq port | gt port | lt port | range port-start port end} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source {source-address source-wildcard | any} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> source</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">port {eq port | gt port | lt port | range port-start port-end} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">|</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> tcp</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">flag {ack | fin | syn} </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">name] </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">*</span></span></code></pre></div><h4 id="高级acl应用举例" tabindex="-1">高级ACL应用举例 <a class="header-anchor" href="#高级acl应用举例" aria-label="Permalink to &quot;高级ACL应用举例&quot;">​</a></h4>`,7)),t(a,{src:"/blog/images/study/ne/高级ACL应用举例1.png",title:"高级ACL应用举例1"}),s[10]||(s[10]=i("br",null,null,-1)),t(a,{src:"/blog/images/study/ne/高级ACL应用举例2.png",title:"高级ACL应用举例2"}),s[11]||(s[11]=l(`<br><h3 id="_6-acl的生效时间段" tabindex="-1">6.ACL的生效时间段 <a class="header-anchor" href="#_6-acl的生效时间段" aria-label="Permalink to &quot;6.ACL的生效时间段&quot;">​</a></h3><p>ACL规则中引用的生效时间段存在两种模式：</p><ul><li>1.周期时间段：以星期为参数来定义时间范围，表示规则以一周为周期(如每周一的8至12点)循环生效</li><li>2.绝对时间段：从某年某月某日的某一时间开始，到某年某月某日的某一时间结束，表示规则在这段时间范围内生效</li></ul><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range test </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">8</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> working</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range test </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">14</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">18</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> off</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">day</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range test from </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">00</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2014</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">01</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">01</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> to </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">23</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">59</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 2014</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">12</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">31</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">#</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">acl number </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2001</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rule </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> permit time</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">range test</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">//时间段&quot;test&quot;最终描述的时间范围为：2014年的周一到周五每天8:00到18:00以及周六和周日下午14:00到18:00</span></span></code></pre></div>`,5))])}const u=h(r,[["render",d]]);export{c as __pageData,u as default};
