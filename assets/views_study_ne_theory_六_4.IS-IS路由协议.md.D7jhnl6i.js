import{_ as i,C as s,c as r,o as S,a4 as l,G as a,j as d}from"./chunks/framework.C_GGjjHE.js";const p=JSON.parse('{"title":"六.4.IS-IS路由协议","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/六/4.IS-IS路由协议.md","filePath":"views/study/ne/theory/六/4.IS-IS路由协议.md","lastUpdated":1758878470000}'),n={name:"views/study/ne/theory/六/4.IS-IS路由协议.md"};function I(o,e,_,u,h,b){const t=s("ImageViewer");return S(),r("div",null,[e[0]||(e[0]=l('<h1 id="六-4-is-is路由协议" tabindex="-1">六.4.IS-IS路由协议 <a class="header-anchor" href="#六-4-is-is路由协议" aria-label="Permalink to &quot;六.4.IS-IS路由协议&quot;">​</a></h1><h3 id="_1-简介" tabindex="-1">1.简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1.简介&quot;">​</a></h3><ul><li>IS-IS（Intermediate System to Intermediate System）是一种用于在OSI参考模型中运行的路由协议，它是一种<span class="brown">链路状态路由协议</span>，使用<span class="brown">最短路径优先SPF(Shortest Path First)</span>算法进行路由计算</li><li>IS-IS在自治系统内采用<span class="brown">骨干区域与非骨干区域</span>两级的分层结构。一般来说，将Level-1路由器部署在非骨干区域，Level-2路由器和Level-1-2路由器部署在骨干区域。每一个非骨干区域都通过Level-1-2路由器与骨干区域相连</li></ul>',3)),a(t,{src:"/blog/images/study/ne/IS-IS.png",title:"IS-IS"}),e[1]||(e[1]=l('<br><h3 id="_2-is-is路由器的分类" tabindex="-1">2.IS-IS路由器的分类 <a class="header-anchor" href="#_2-is-is路由器的分类" aria-label="Permalink to &quot;2.IS-IS路由器的分类&quot;">​</a></h3><ul><li>Level-1路由器负责区域内的路由，它只与属于同一区域的Level-1和Level-1-2路由器形成邻居关系，属于不同区域的Level-1路由器不能形成邻居关系</li><li>Level-2路由器负责区域间的路由，它可以与同一或者不同区域的Level-2路由器或者同一区域的其他区域的Level-1-2路由器形成邻居关系</li><li>同时属于Level-1和Level-2的路由器称为Level-1-2路由器，它可以与同一区域的Level-1和Level-1-2路由器形成Level-1邻居关系，也可以与同一区域或其他区域的Level-2和Level-1-2路由器形成Level-2的邻居关系。Level-1路由器必须通过Level-1-2路由器才能连接至其他区域</li></ul><h3 id="_3-is-is组网特点" tabindex="-1">3.IS-IS组网特点 <a class="header-anchor" href="#_3-is-is组网特点" aria-label="Permalink to &quot;3.IS-IS组网特点&quot;">​</a></h3><ul><li>1.保证L2路由器是连续的</li><li>2.L1-only路由器必须AID相同才能建立L1邻接关系</li><li>3.L2-only路由器即使AID不同也能够建立L2邻接关系</li><li>4.L1/L2路由器可以和所有类型路由器建立邻接关系</li><li>5.如果两台L1/L2路由器的AID匹配，它们就可以同时形成L1和L2类型邻接关系</li><li>6.如果两台L1/L2路由器的AID不匹配，它们就只能形成L2类型的邻接关系</li></ul>',5)),a(t,{src:"/blog/images/study/ne/IS-IS组网特点.png",title:"IS-IS组网特点"}),e[2]||(e[2]=l('<br><h3 id="_4-is-is的网络类型" tabindex="-1">4.IS-IS的网络类型 <a class="header-anchor" href="#_4-is-is的网络类型" aria-label="Permalink to &quot;4.IS-IS的网络类型&quot;">​</a></h3><ul><li>1.广播链路：如Ethernet，Token-Ring等</li><li>2.点到点链路：如PPP、HDLC等</li><li>默认情况下，IS-IS接口cost值为10，不会基于带宽自动计算</li></ul><h3 id="_5-is-is的地址结构" tabindex="-1">5.IS-IS的地址结构 <a class="header-anchor" href="#_5-is-is的地址结构" aria-label="Permalink to &quot;5.IS-IS的地址结构&quot;">​</a></h3><p>网络实体名称NET(Network Entity Title)指的是设备本身的网络层信息，由<span class="brown">区域地址</span>和<span class="brown">System ID</span>组成。NET的长度最多为20个字节，最少为8个字节。</p><ul><li><span class="brown">Area Address</span>：相当于OSPF中的区域编号</li><li><span class="brown">System ID</span>：System ID用来在区域内唯一标识主机或路由器。在设备的实现中，它的长度固定位48bit(6字节)。在实际应用中，一般使用Router ID与System ID进行对应</li><li><span class="brown">SEL</span>：类似IP中的&quot;协议标识符&quot;，不同的传输协议对应不同的SEL。在IP上SEL均为00</li></ul>',6)),a(t,{src:"/blog/images/study/ne/IS-IS的地址结构.png",title:"IS-IS的地址结构"}),e[3]||(e[3]=l('<br><div class="green"><ul><li>将IP地址168.10.1.1的每个十进制数都扩展为3位，不足3位的在前面补0，得到168.010.001.001</li><li>将扩展后的地址分为3部分，每部分由4位数字组成，得到1680.1000.1001。重新组合的1680.1000.1001就是System ID</li><li>此时每部分为16进制数，不再是10进制数</li></ul></div><ul><li>例如有NET为：<span class="brown">ab.cdef.1234.5678.9abc.00</span></li><li><ul><li>其中Area Address为ab.cdef</li></ul></li><li><ul><li>System ID为1234.5678.9abc</li></ul></li><li><ul><li>SEL为00</li></ul></li></ul><h3 id="_6-is-is基本配置" tabindex="-1">6.IS-IS基本配置 <a class="header-anchor" href="#_6-is-is基本配置" aria-label="Permalink to &quot;6.IS-IS基本配置&quot;">​</a></h3>',4)),a(t,{src:"/blog/images/study/ne/IS-IS基本配置1.png",title:"IS-IS基本配置1"}),e[4]||(e[4]=d("br",null,null,-1)),a(t,{src:"/blog/images/study/ne/IS-IS基本配置2.png",title:"IS-IS基本配置2"}),e[5]||(e[5]=l('<br><h3 id="_7-is-is与ospf的区别" tabindex="-1">7.IS-IS与OSPF的区别 <a class="header-anchor" href="#_7-is-is与ospf的区别" aria-label="Permalink to &quot;7.IS-IS与OSPF的区别&quot;">​</a></h3><table tabindex="0"><thead><tr><th></th><th>IS - IS</th><th>OSPF</th></tr></thead><tbody><tr><td>区域边界</td><td>在链路上</td><td>在路由器上</td></tr><tr><td>骨干区域</td><td>单个区域没有骨干与非骨干区域的概念</td><td>Area0被定义为骨干区域</td></tr><tr><td>SPF算法</td><td>Level - 1和Level - 2级别的路由都采用SPF算法</td><td>只有在同一个区域内才使用SPF算法，区域之间的路由需要通过骨干区域来转发</td></tr><tr><td>DR选举</td><td>优先级为0的路由器也参与DIS的选举</td><td>优先级为0的路由器则不参与DR的选举</td></tr><tr><td>DR抢占</td><td>抢占</td><td>不抢占</td></tr><tr><td>DR邻接</td><td>非DIS路由器之间也会形成邻接关系</td><td>非DR不建立邻接关系</td></tr></tbody></table>',3))])}const m=i(n,[["render",I]]);export{p as __pageData,m as default};
