import{_ as r,C as t,c as s,o,b1 as n,G as e,j as P,a}from"./chunks/framework.w2ptJf3g.js";const f=JSON.parse('{"title":"二.2.PPP协议","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/二/2.PPP协议.md","filePath":"views/study/ne/theory/二/2.PPP协议.md","lastUpdated":1752655198000}'),u={name:"views/study/ne/theory/二/2.PPP协议.md"};function p(d,l,b,C,g,m){const i=t("ImageViewer");return o(),s("div",null,[l[0]||(l[0]=n('<h1 id="二-2-ppp协议" tabindex="-1">二.2.PPP协议 <a class="header-anchor" href="#二-2-ppp协议" aria-label="Permalink to &quot;二.2.PPP协议&quot;">​</a></h1><h3 id="_1-简介" tabindex="-1">1.简介 <a class="header-anchor" href="#_1-简介" aria-label="Permalink to &quot;1.简介&quot;">​</a></h3><ul><li>对于点对点的链路，目前使用得最广泛的数据链路层协议是点对点协议PPP(Point-to-Point Protocol)</li><li>PPP协议在1994年就已经成为互联网的正式标准[RFC 1661]</li><li>PPP协议主要包括两个组成部分：</li><li><ul><li><span class="green">链路控制协议LCP(Link Control Protocol)</span></li></ul></li><li><ul><li><ul><li>底层电路协商，建立连接</li></ul></li></ul></li><li><ul><li><span class="green">网络控制协议NCP(Network Control Protocol)</span></li></ul></li><li><ul><li><ul><li>协商IP地址</li></ul></li></ul></li></ul><h3 id="_2-ppp协议的帧格式" tabindex="-1">2.PPP协议的帧格式 <a class="header-anchor" href="#_2-ppp协议的帧格式" aria-label="Permalink to &quot;2.PPP协议的帧格式&quot;">​</a></h3>',4)),e(i,{src:"/blog/images/study/ne/PPP协议的帧格式.png",title:"PPP协议的帧格式"}),l[1]||(l[1]=n('<br><ul><li>标志字段F：0x7E。连续两帧之间只需要用一个标志字段。</li><li>地址字段A：只置为0xFF。实际上不起作用。</li><li>控制字段C：通常置为0x03。</li></ul><h3 id="_3-ppp协议透明传输问题" tabindex="-1">3.PPP协议透明传输问题 <a class="header-anchor" href="#_3-ppp协议透明传输问题" aria-label="Permalink to &quot;3.PPP协议透明传输问题&quot;">​</a></h3><ul><li>当PPP用在异步传输时，使用<span class="green">字节填充法</span>。</li><li>当PPP用在同步传输时，使用<span class="green">零比特填充法</span>。</li><li>对<span class="brown">0x7D、0x7E、0x20</span>以下的控制符号均需转义，与0x20做异或运算，就得到了转义后的序列</li></ul>',4)),e(i,{src:"/blog/images/study/ne/PPP协议透明传输问题.png",title:"PPP协议透明传输问题"}),l[2]||(l[2]=P("br",null,null,-1)),l[3]||(l[3]=P("p",null,"PPP协议零比特填充",-1)),e(i,{src:"/blog/images/study/ne/PPP协议零比特填充.png",title:"PPP协议零比特填充"}),l[4]||(l[4]=P("br",null,null,-1)),l[5]||(l[5]=P("h3",{id:"_4-ppp协议的工作过程",tabindex:"-1"},[a("4.PPP协议的工作过程 "),P("a",{class:"header-anchor",href:"#_4-ppp协议的工作过程","aria-label":'Permalink to "4.PPP协议的工作过程"'},"​")],-1)),e(i,{src:"/blog/images/study/ne/PPP协议的工作过程.png",title:"PPP协议的工作过程"}),l[6]||(l[6]=n('<br><ul><li>LCP报文携带的一些常见的配置参数有MRU、认证协议和魔术字</li><li>NCP主要用来建立和配置不同的网络层协议，协商在该数据链路上所传输的数据包的格式与类型。常见的有IPCP等。</li></ul><h4 id="_1-lcp协商-正常协商" tabindex="-1">1.LCP协商-正常协商 <a class="header-anchor" href="#_1-lcp协商-正常协商" aria-label="Permalink to &quot;1.LCP协商-正常协商&quot;">​</a></h4><ul><li>LCP协商由不听的LCP报文交互完成。协商由任意一方发送Configure-Request报文发起。</li><li>如果对端接收此报文且参数匹配，则通过回复Configure-Ack响应协商成功。</li><li>双方最大传输单元MRU要相同</li><li>认证协议Auth_Type要相同</li><li>魔术字Magic_Num<span class="red">不同</span><br></li></ul>',4)),e(i,{src:"/blog/images/study/ne/LCP协商-正常协商.png",title:"LCP协商-正常协商"}),l[7]||(l[7]=P("br",null,null,-1)),l[8]||(l[8]=P("h4",{id:"_2-lcp协商-参数不匹配",tabindex:"-1"},[a("2.LCP协商-参数不匹配 "),P("a",{class:"header-anchor",href:"#_2-lcp协商-参数不匹配","aria-label":'Permalink to "2.LCP协商-参数不匹配"'},"​")],-1)),l[9]||(l[9]=P("p",null,"在LCP报文交互中出现LCP参数不匹配时，接收方回复Configure-Nak响应告知对端修改参数然后重新协商",-1)),e(i,{src:"/blog/images/study/ne/LCP协商-参数不匹配.png",title:"LCP协商-参数不匹配"}),l[10]||(l[10]=P("br",null,null,-1)),l[11]||(l[11]=P("h4",{id:"_3-lcp协商-参数不识别",tabindex:"-1"},[a("3.LCP协商-参数不识别 "),P("a",{class:"header-anchor",href:"#_3-lcp协商-参数不识别","aria-label":'Permalink to "3.LCP协商-参数不识别"'},"​")],-1)),l[12]||(l[12]=P("p",null,"在LCP报文交互中出现LCP参数不识别时，接收方回复Configure-Reject响应告知对端删除不识别的参数然后重新协商。",-1)),e(i,{src:"/blog/images/study/ne/LCP协商-参数不识别.png",title:"LCP协商-参数不识别"}),l[13]||(l[13]=P("br",null,null,-1)),l[14]||(l[14]=P("h3",{id:"_4-ppp认证模式",tabindex:"-1"},[a("4.PPP认证模式 "),P("a",{class:"header-anchor",href:"#_4-ppp认证模式","aria-label":'Permalink to "4.PPP认证模式"'},"​")],-1)),l[15]||(l[15]=P("ul",null,[P("li",null,"链路协商成功后，进行认证协商(此过程可选)。"),P("li",null,"认证协商有两种模式，PAP(密码认证协议)和CHAP(挑战认证协议)。")],-1)),l[16]||(l[16]=P("h4",{id:"pap",tabindex:"-1"},[a("PAP "),P("a",{class:"header-anchor",href:"#pap","aria-label":'Permalink to "PAP"'},"​")],-1)),l[17]||(l[17]=P("ul",null,[P("li",null,"PAP认证双方有两次握手。协商报文以明文的形式在链路上传输。")],-1)),e(i,{src:"/blog/images/study/ne/PPP认证模式-PAP.png",title:"PPP认证模式-PAP"}),l[18]||(l[18]=P("br",null,null,-1)),l[19]||(l[19]=P("h4",{id:"chap",tabindex:"-1"},[a("CHAP "),P("a",{class:"header-anchor",href:"#chap","aria-label":'Permalink to "CHAP"'},"​")],-1)),l[20]||(l[20]=P("ul",null,[P("li",null,"CHAP认证双方有四次握手。协商报文以明文的形式在链路上传输。")],-1)),e(i,{src:"/blog/images/study/ne/PPP认证模式-CHAP.png",title:"PPP认证模式-CHAP"}),l[21]||(l[21]=n('<br><h3 id="_5-ncp协商" tabindex="-1">5.NCP协商 <a class="header-anchor" href="#_5-ncp协商" aria-label="Permalink to &quot;5.NCP协商&quot;">​</a></h3><ul><li>PPP认证协商后，双方进入NCP协商阶段，协商在数据链路上所传输的数据包的格式与类型</li><li>以常见的IPCP协议为例，它分为静态IP地址协商和动态IP地址协商</li></ul><h4 id="静态ip地址协商" tabindex="-1">静态IP地址协商 <a class="header-anchor" href="#静态ip地址协商" aria-label="Permalink to &quot;静态IP地址协商&quot;">​</a></h4><ul><li>静态IP地址协商需要手动在链路双端配置IP地址<span class="red">(两端可在不同的网段，并且可用/31的掩码)</span>。</li></ul>',5)),e(i,{src:"/blog/images/study/ne/NCP协商-静态IP地址协商.png",title:"NCP协商-静态IP地址协商"}),l[22]||(l[22]=P("br",null,null,-1)),l[23]||(l[23]=P("h4",{id:"动态ip地址协商",tabindex:"-1"},[a("动态IP地址协商 "),P("a",{class:"header-anchor",href:"#动态ip地址协商","aria-label":'Permalink to "动态IP地址协商"'},"​")],-1)),l[24]||(l[24]=P("ul",null,[P("li",null,"动态IP地址协商支持PPP链路一端为对端配置IP地址。")],-1)),e(i,{src:"/blog/images/study/ne/NCP协商-动态IP地址协商.png",title:"NCP协商-动态IP地址协商"}),l[25]||(l[25]=P("br",null,null,-1)),l[26]||(l[26]=P("h3",{id:"_6-pppoe协议",tabindex:"-1"},[a("6.PPPoe协议 "),P("a",{class:"header-anchor",href:"#_6-pppoe协议","aria-label":'Permalink to "6.PPPoe协议"'},"​")],-1)),l[27]||(l[27]=P("ul",null,[P("li",null,"PPPoE(PPP over Ethernet，以太网承载PPP协议)以太网上的点对点协议，是一种把PPP帧封装到以太网帧中的链路层协议。"),P("li",null,"PPPoE集中了PPP和Ethernet两个技术的有点。既有以太网的组网灵活优势，又可以利用PPP协议实现认证、计费等功能。"),P("li",null,"家庭宽带接入普遍使用PPPoe协议")],-1)),e(i,{src:"/blog/images/study/ne/PPPoe协议.png",title:"PPPoe协议"}),l[28]||(l[28]=P("br",null,null,-1))])}const A=r(u,[["render",p]]);export{f as __pageData,A as default};
