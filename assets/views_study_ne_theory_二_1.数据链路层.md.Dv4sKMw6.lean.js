import{_ as e,C as n,c as s,o as h,j as l,G as a,b1 as r,a as d}from"./chunks/framework.BbzeyoJx.js";const g=JSON.parse('{"title":"二.1.数据链路层","description":"","frontmatter":{},"headers":[],"relativePath":"views/study/ne/theory/二/1.数据链路层.md","filePath":"views/study/ne/theory/二/1.数据链路层.md","lastUpdated":1752568526000}'),u={name:"views/study/ne/theory/二/1.数据链路层.md"};function o(C,t,p,b,m,P){const i=n("ImageViewer");return h(),s("div",null,[t[0]||(t[0]=l("h1",{id:"二-1-数据链路层",tabindex:"-1"},[d("二.1.数据链路层 "),l("a",{class:"header-anchor",href:"#二-1-数据链路层","aria-label":'Permalink to "二.1.数据链路层"'},"​")],-1)),t[1]||(t[1]=l("h3",{id:"_1-数据链路层",tabindex:"-1"},[d("1.数据链路层 "),l("a",{class:"header-anchor",href:"#_1-数据链路层","aria-label":'Permalink to "1.数据链路层"'},"​")],-1)),t[2]||(t[2]=l("ul",null,[l("li",null,"在OSI模型中处在倒数第二层"),l("li",null,"把上层的数据封装成数据帧"),l("li",null,"对本层数据进行参数检测"),l("li",null,"在多路访问的广播网络中，还有寻址功能")],-1)),a(i,{src:"/blog/images/study/ne/数据链路层的作用.png",title:"数据链路层的作用"}),t[3]||(t[3]=r("",7)),a(i,{src:"/blog/images/study/ne/数据链路层-封装成帧.png",title:"数据链路层-封装成帧"}),t[4]||(t[4]=l("br",null,null,-1)),t[5]||(t[5]=l("h4",{id:"_2-透明传输",tabindex:"-1"},[d("2.透明传输 "),l("a",{class:"header-anchor",href:"#_2-透明传输","aria-label":'Permalink to "2.透明传输"'},"​")],-1)),t[6]||(t[6]=l("p",null,'问题：如果数据中的某个字节的二进制代码恰好和SOH和EOT一样，数据链路层就会错误地"找到帧的边界"，导致错误',-1)),a(i,{src:"/blog/images/study/ne/数据链路层-透明传输.png",title:"数据链路层-透明传输"}),t[7]||(t[7]=l("br",null,null,-1)),t[8]||(t[8]=l("p",null,"解决方法：",-1)),t[9]||(t[9]=l("ul",null,[l("li",null,"字节填充(异步)"),l("li",null,"零比特填充(同步)")],-1)),a(i,{src:"/blog/images/study/ne/透明传输差错解决方法.png",title:"透明传输差错解决方法"}),t[10]||(t[10]=l("br",null,null,-1)),t[11]||(t[11]=l("h4",{id:"_3-差错检测",tabindex:"-1"},[d("3.差错检测 "),l("a",{class:"header-anchor",href:"#_3-差错检测","aria-label":'Permalink to "3.差错检测"'},"​")],-1)),t[12]||(t[12]=l("p",null,"传输过程中可能会产生比特差错",-1)),t[13]||(t[13]=l("ul",null,[l("li",null,"原数据1 ==> 传递后0"),l("li",null,"原数据0 ==> 传递后1")],-1)),a(i,{src:"/blog/images/study/ne/数据链路层-差错检测.png",title:"数据链路层-差错检测"}),t[14]||(t[14]=l("br",null,null,-1)),t[15]||(t[15]=l("p",null,[d("在一段时间内，传输错误的比特占所传输比特总数的比特称为"),l("span",{class:"blue"},"误码率BER(Bit Error Rate)")],-1)),t[16]||(t[16]=l("h5",{id:"循环冗余检测crc",tabindex:"-1"},[d("循环冗余检测CRC "),l("a",{class:"header-anchor",href:"#循环冗余检测crc","aria-label":'Permalink to "循环冗余检测CRC"'},"​")],-1)),t[17]||(t[17]=l("ul",null,[l("li",null,"在发送端，先把数据划分为组。假定每组k个比特。"),l("li",null,"CRC运算在每组M后面再添加供差错检测用的n位冗余码，然后构成一个帧发送出去。一共发送(k + n)位。")],-1)),a(i,{src:"/blog/images/study/ne/循环冗余检测CRC.png",title:"循环冗余检测CRC"}),t[18]||(t[18]=l("br",null,null,-1)),t[19]||(t[19]=l("p",null,[d("这种为了进行检错而添加的冗余码常称为"),l("span",{class:"blue"},"帧检验序列FCS(Frame Check Sequence)")],-1)),t[20]||(t[20]=l("h6",{id:"crc冗余码计算",tabindex:"-1"},[d("CRC冗余码计算 "),l("a",{class:"header-anchor",href:"#crc冗余码计算","aria-label":'Permalink to "CRC冗余码计算"'},"​")],-1)),a(i,{src:"/blog/images/study/ne/CRC冗余码计算.png",title:"CRC冗余码计算"}),t[21]||(t[21]=l("br",null,null,-1)),t[22]||(t[22]=l("h6",{id:"crc冗余码计算示例",tabindex:"-1"},[d("CRC冗余码计算示例 "),l("a",{class:"header-anchor",href:"#crc冗余码计算示例","aria-label":'Permalink to "CRC冗余码计算示例"'},"​")],-1)),t[23]||(t[23]=l("p",null,"如果信息位为11001010101，生成多项式G(x) = x4 + x3 + x + 1，则校验码生成过程如下：",-1)),a(i,{src:"/blog/images/study/ne/CRC计算示例.png",title:"CRC计算示例"}),t[24]||(t[24]=r("",30))])}const f=e(u,[["render",o]]);export{g as __pageData,f as default};
